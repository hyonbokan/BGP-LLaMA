[
    {
        "instruction": "Perform prefix analysis to measure AS path inflation and study how path length and preference change over time.",
        "input": "Prefix analysis to measure AS path inflation and study the change in path length and preference over time for peer ASN 22914.",
        "output": "import pybgpstream\nimport json\nfrom datetime import datetime, timedelta\n\nstart_time = datetime.strptime(\"2017-11-01 00:00:00\", \"%Y-%m-%d %H:%M:%S\")\nend_time = datetime.strptime(\"2017-11-30 23:59:59\", \"%Y-%m-%d %H:%M:%S\")\n\nstream = pybgpstream.BGPStream(\n    from_time=start_time.strftime(\"%Y-%m-%d %H:%M:%S\"), \n    until_time=end_time.strftime(\"%Y-%m-%d %H:%M:%S\"), \n    collectors=[\"route-views.amsix\"], \n    record_type=\"updates\",\n    filter=\"peer 22914 and prefix more 185.84.166.0/23\"\n)\n\noutput = []\nfor rec in stream.records():\n    path_length = 0\n    for elem in rec:\n        path_length += len(elem.fields[\"as_path\"].split(\" \"))\n        preference = int(elem.fields[\"local_pref\"])\n    output.append({\"Prefix\": elem.fields['prefix'], \"Length\": path_length, \"Preference\": preference})\n\nprint(json.dumps(output))",
        "most_similar_instructions": {
            "Perform BGP analysis and detect anomalies in AS path lengths for IPv4 prefixes over two time periods.": 0.34285714285714286,
            "Analyze BGP update events with AS path containing '64512' and '65500' during July 20, 2022, from 10 AM to 4 PM. Count the occurrences of different AS path patterns and identify the most common ones.": 0.18867924528301885,
            "Investigate the historical trends in BGP path length using data collected from the rrc02 collector between 2023-01-01 and 2023-08-01. Perform a time-series analysis to calculate the average BGP path length for each month during this period. Visualize the results using a line chart and annotations indicating significant events that may have influenced path length changes.": 0.17948717948717952,
            "Query BGP update events during June 15, 2023, from the 'rrc10' collector, focusing on announcements where the AS path includes AS 3356 and there's a prefix length of 24. Analyze the frequency of announcements per peer IP address during this time frame.": 0.1639344262295082,
            "Perform an in-depth path length analysis to compare the shortest path lengths between peer and origin ASes in a real BGP environment and their respective shortest path lengths in an undirected graph representation. Use BGP RIBs collected from the 'rrc00' collector between 7:50:00 and 8:10:00 on August 1, 2015. Output the findings as a list of tuples containing (peer, origin, BGP_hop_length, shortest_graph_length).": 0.15730337078651685,
            "Perform time-series analysis on the MOAS events from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Identify the timestamps when MOAS events are observed and the frequency of these events during this period. Plot this information on a time-series graph.": 0.14705882352941177,
            "Analyze the effects of different AS relationships\u2014Peer, Customer, Provider\u2014on BGP path inflation. We'll use data collected from the rrc00 collector between 10:50 and 11:00 on April 1, 2021. Create a map that assigns the relationship between each AS pair, calculate the actual BGP path length and the graph-theoretical shortest path between each AS pair and output the list of each AS pair, their relationship type, and whether the BGP path is inflated compared to the graph's shortest path.": 0.13592233009708737,
            "Perform a community and policy analysis to understand the implications of MOAS (Multiple Origin AS) events on BGP policy decisions. Use data collected from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Filter BGP records to only include IPv4 updates that carry community values (comm filter). Report on the BGP community values associated with MOAS prefixes and discuss the intent behind these community tags.": 0.13333333333333333,
            "Investigate BGP update events originating from the 'rrc00' collector, with the goal of analyzing patterns in announcement (A) messages over a specified period. Specifically, focus on announcements with AS path containing '65000' and '65500', within the timeframe from September 1, 2023, 8:00 AM to September 3, 2023, 11:59 PM. Identify trends and visualize the time distribution of these announcements.": 0.12658227848101267
        },
        "avg_similarity_score": 0.0946659890848499
    },
    {
        "instruction": "Collect data from a selected list of collectors and perform MOAS prefix analysis.",
        "input": "Data collection from a list of collectors: 'rrc01','rrc02','rrc03'. Performing MOAS prefix analysis for the prefix 1.0.0.0/16.",
        "output": "import pybgpstream\nfrom collections import defaultdict\nfrom datetime import datetime, timedelta\nimport json\n\nstart_time = datetime.strptime(\"2018-09-10 00:00:00\", \"%Y-%m-%d %H:%M:%S\")\nend_time = datetime.strptime(\"2018-09-11 00:00:00\", \"%Y-%m-%d %H:%M:%S\")\n\nstream = pybgpstream.BGPStream(\n    from_time=start_time.strftime(\"%Y-%m-%d %H:%M:%S\"), \n    until_time=end_time.strftime(\"%Y-%m-%d %H:%M:%S\"), \n    collectors=['rrc01','rrc02','rrc03'], \n    record_type=\"updates\",\n    filter=\"prefix more 1.0.0.0/16\"\n)\n\nmoas_dict = defaultdict(lambda : defaultdict(list))\n\nfor rec in stream.records():\n    for elem in rec:\n        prefix = elem.fields['prefix']\n        moas = elem.fields['moas']\n        for asn in moas:\n            moas_dict[asn][prefix].append(\n                {\n                    \"as-path\": elem.fields['as_path'].split(' '),\n                    \"peer-asn\": elem.fields['peer_asn']\n                }\n            )\n\noutput = []\nfor asn, prefixes in moas_dict.items():\n    output.append({\"ASN\": asn, \"Prefixes\": prefixes})\n\nprint(json.dumps(output))",
        "most_similar_instructions": {
            "Collect BGP data from the 'rrc06' collector within the time window of January 1, 2021, 00:00:00 to January 1, 2021, 01:00:00. Focus on the 'updates' record type with peer ASN 65001 and prefix 192.0.2.0/24.": 0.21818181818181817,
            "Collect BGP updates from a specific collector for IPv4 prefixes with a specific BGP community value.": 0.20689655172413793,
            "Collect BGP RIB entries from a specific collector for IPv6 prefixes announced by AS path containing ASN 56789.": 0.1935483870967742,
            "Perform prefix analysis to measure AS path inflation and study how path length and preference change over time.": 0.1935483870967742,
            "Analyze the preferences of AS paths using data gathered from the collector rrc07 between 08:00 and 09:00 on May 20, 2023. Examine the most common AS paths and the frequency of their occurrence. Visualize the AS topology using a network graph. Output the list of top AS paths and their corresponding frequencies.": 0.17910447761194032,
            "Analyze BGP community usage trends using data from collector rrc02 on June 1, 2021, between 00:00 and 01:00. Calculate the frequency of each BGP community and identify the top 5 most commonly used communities.": 0.163265306122449,
            "Investigate variations in local preference values associated with BGP communities using data from collector rrc03 on July 15, 2021, between 10:00 and 11:00.": 0.15789473684210525,
            "Write a Python script using the PyBGPStream library for Real-Time Detection of Short-lived Prefix Announcements (Prefix Flapping). Detect when a prefix is announced and withdrawn repeatedly in a short time window (prefix flapping), which may indicate network instability or misconfiguration.": 0.14545454545454545,
            "Analyze prefix announcements and withdrawals using BGP data from collector rrc04 on February 25, 2021, between 10:00 and 11:00. Count the frequency of announcements and withdrawals for each prefix and identify the top 5 most announced and withdrawn prefixes. Generate a report displaying the top 5 prefixes for both announcements and withdrawals along with their corresponding counts.": 0.1388888888888889
        },
        "avg_similarity_score": 0.11408429054738674
    },
    {
        "instruction": "Access live stream data sources to collect data about a selected prefix and its AS path.",
        "input": "Accessing live stream data sources to collect data for the prefix 185.84.166.0/23 and its AS path from the collector route-views.amsix.",
        "output": "import pybgpstream\nimport json\n\nfrom_time = None\nuntil_time = None\n\nstream = pybgpstream.BGPStream(\n    from_time=from_time,\n    until_time=until_time,\n    collectors=[\"route-views.amsix\"],\n    record_type=\"updates\",\n    filter=\"prefix more 185.84.166.0/23 and path *\"\n)\n\noutput = []\n\nfor rec in stream.records():\n    for elem in rec:\n        output.append({\"Prefix\": elem.fields['prefix'], \"Path\": elem.fields[\"as_path\"].split(\" \")})\n\nprint(json.dumps(output))",
        "most_similar_instructions": {
            "Collect data from a selected list of collectors and perform MOAS prefix analysis.": 0.3448275862068966,
            "Collect BGP RIB entries from a specific collector for IPv6 prefixes announced by AS path containing ASN 56789.": 0.23529411764705882,
            "Perform BGP analysis and detect anomalies in AS path lengths for IPv4 prefixes over two time periods.": 0.1818181818181818,
            "Perform prefix analysis to measure AS path inflation and study how path length and preference change over time.": 0.17647058823529413,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.14814814814814814,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP (Border Gateway Protocol) routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.14035087719298248,
            "Investigate the historical trends in BGP path length using data collected from the rrc02 collector between 2023-01-01 and 2023-08-01. Perform a time-series analysis to calculate the average BGP path length for each month during this period. Visualize the results using a line chart and annotations indicating significant events that may have influenced path length changes.": 0.13157894736842105,
            "Identify Autonomous Systems (ASes) that potentially employ AS Path Prepending based on BGP data from collector route-views2 on January 15, 2021, between 00:00 and 01:00. Count and list ASes that engage in AS Path Prepending, along with the number of prepend events detected.": 0.12903225806451613,
            "Analyze how different AS relationships contribute to path inflation. Create a map that assigns relationships (Peer, Customer, Provider) between AS pairs. Utilize the same data set from rrc00 between 10:50 and 11:00 on April 1, 2021. Provide a summary output listing each AS pair, their relationship type, and whether the BGP path was inflated compared to the graph shortest path.": 0.1282051282051282
        },
        "avg_similarity_score": 0.09974883459517654
    },
    {
        "instruction": "Create a program to compare the AS path length and peer ASN of two or more ASes with the same prefix.",
        "input": "Comparison between two ASes, ASN 25152 and ASN 10033, with the same prefix 185.84.166.0/23.",
        "output": "import pybgpstream\nimport json\n\nfrom_time = None\nuntil_time = None\n\nstream = pybgpstream.BGPStream(\n    from_time=from_time,\n    until_time=until_time,\n    collectors=[\"rrc01\",\"rrc02\",\"rrc03\"],\n    record_type=\"updates\",\n    filter=\"prefix more 185.84.166.0/23 and (peer 25152 or peer 10033)\"\n)\n\noutput = []\n\nfor rec in stream.records():\n    for elem in rec:\n        output.append({\"Prefix\": elem.fields['prefix'], \"Peer ASN\": elem.fields['peer_asn'], \"Length of Path\": len(elem.fields[\"as_path\"].split(\" \"))})\n\nprint(json.dumps(output))",
        "most_similar_instructions": {
            "Perform prefix analysis to measure AS path inflation and study how path length and preference change over time.": 0.25641025641025644,
            "Analyze BGP update events with AS path containing '64512' and '65500' during July 20, 2022, from 10 AM to 4 PM. Count the occurrences of different AS path patterns and identify the most common ones.": 0.21428571428571427,
            "Collect BGP RIB entries from a specific collector for IPv6 prefixes announced by AS path containing ASN 56789.": 0.20512820512820512,
            "Identify the top hub Autonomous Systems (ASes) in BGP paths using data from collector rrc04 on July 20, 2021, between 10:00 and 11:00. Analyze AS path information and count the occurrence of each AS in the path to determine their hub status. Generate a report listing the top 5 hub ASes along with the number of times they appear in BGP paths.": 0.18823529411764706,
            "Query BGP update events during June 15, 2023, from the 'rrc10' collector, focusing on announcements where the AS path includes AS 3356 and there's a prefix length of 24. Analyze the frequency of announcements per peer IP address during this time frame.": 0.18749999999999997,
            "Identify Autonomous Systems (ASes) that potentially employ AS Path Prepending based on BGP data from collector route-views2 on January 15, 2021, between 00:00 and 01:00. Count and list ASes that engage in AS Path Prepending, along with the number of prepend events detected.": 0.17910447761194026,
            "Collect data from a selected list of collectors and perform MOAS prefix analysis.": 0.17647058823529413,
            "Compare BGP update events from peer '65000' and peer '65100' during November 15, 2022, from 2 PM to 8 PM. Determine if there are significant differences in the frequency of announcements and withdrawals between the two peers.": 0.1724137931034483,
            "Analyze the effects of different AS relationships\u2014Peer, Customer, Provider\u2014on BGP path inflation. We'll use data collected from the rrc00 collector between 10:50 and 11:00 on April 1, 2021. Create a map that assigns the relationship between each AS pair, calculate the actual BGP path length and the graph-theoretical shortest path between each AS pair and output the list of each AS pair, their relationship type, and whether the BGP path is inflated compared to the graph's shortest path.": 0.16981132075471697,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.1694915254237288
        },
        "avg_similarity_score": 0.13598212297594384
    },
    {
        "instruction": "Collect data from the route-view collector and use prefix filtering to identify prefixes which have implemented certain community policies.",
        "input": "Data collection from the route-view collector with prefix filtering to identify prefixes with community 0:1.",
        "output": "import pybgpstream\nimport json\n\nfrom_time = None\nuntil_time = None\n\nstream = pybgpstream.BGPStream(\n    from_time=from_time,\n    until_time=until_time,\n    collectors=[\"route-views\"],\n    record_type=\"updates\",\n    filter=\"prefix more 185.84.166.0/23 and comm 0:1\"\n)\n\noutput = []\n\nfor rec in stream.records():\n    for elem in rec:\n        output.append({\"Prefix\": elem.fields['prefix'], \"Peer ASN\": elem.fields['peer_asn'], \"Path\": elem.fields[\"as_path\"].split(\" \"), \"Prefix Communities\": elem.fields[\"communities\"]})\n\nprint(json.dumps(output))",
        "most_similar_instructions": {
            "Collect data from a selected list of collectors and perform MOAS prefix analysis.": 0.30303030303030304,
            "Collect BGP updates from a specific collector for IPv4 prefixes with a specific BGP community value.": 0.2777777777777778,
            "Collect BGP data from the 'rrc06' collector within the time window of January 1, 2021, 00:00:00 to January 1, 2021, 01:00:00. Focus on the 'updates' record type with peer ASN 65001 and prefix 192.0.2.0/24.": 0.22580645161290322,
            "Collect BGP updates during October 10, 2023, from the 'rrc06' collector. Identify announcements with the community attribute containing '64500:200'. Calculate the percentage of these announcements compared to the total number of announcements during this day.": 0.21428571428571427,
            "Collect BGP RIB entries from a specific collector for IPv6 prefixes announced by AS path containing ASN 56789.": 0.2105263157894737,
            "Retrieve BGP announcement records for IPv6 prefixes from the collector 'route-views.eqix'.": 0.18181818181818185,
            "Retrieve BGP update events related to IPv6 prefixes originating from 'rrc14' collector during May 20, 2023, from 12:00 PM to 6:00 PM. Filter for withdrawals and identify the specific prefixes that have been withdrawn during this period. Present the prefixes in a readable format.": 0.18181818181818182,
            "Analyze BGP community usage trends using data from collector rrc02 on June 1, 2021, between 00:00 and 01:00. Calculate the frequency of each BGP community and identify the top 5 most commonly used communities.": 0.17857142857142858,
            "Investigate variations in local preference values associated with BGP communities using data from collector rrc03 on July 15, 2021, between 10:00 and 11:00.": 0.17777777777777778,
            "Analyze prefix announcements and withdrawals using BGP data from collector rrc04 on February 25, 2021, between 10:00 and 11:00. Count the frequency of announcements and withdrawals for each prefix and identify the top 5 most announced and withdrawn prefixes. Generate a report displaying the top 5 prefixes for both announcements and withdrawals along with their corresponding counts.": 0.17721518987341772
        },
        "avg_similarity_score": 0.14030236493158305
    },
    {
        "instruction": "Utilizing the filter attribute, generate JSON dumps of the BGP data collected to provide insights about AS relationship.",
        "input": "Utilize the filter attribute to generate JSON dumps for peer ASNs 9158 and 9498 for BGP data that shows AS relationships.",
        "output": "import pybgpstream\nimport json\n\nfrom_time = None\nuntil_time = None\n\nstream = pybgpstream.BGPStream(\n    from_time=from_time,\n    until_time=until_time,\n    collectors=[\"route-views.amsix\"],\n    record_type=\"updates\",\n    filter=\"prefix more 185.84.166.0/23 and (peer 9158 or peer 9498)\"\n)\n\noutput = []\n\nfor rec in stream.records():\n    for elem in rec:\n        output.append({\"Peer ASN\": elem.fields['peer_asn'], \"Path\": elem.fields[\"as_path\"].split(\" \"), \"Prefix\": elem.fields[\"prefix\"]})\n\nprint(json.dumps(output))",
        "most_similar_instructions": {
            "Access live stream data sources to collect data about a selected prefix and its AS path.": 0.23529411764705882,
            "Write a Python script using the PyBGPStream library for Real-Time Detection of BGP Session Resets. Monitor for the mass withdrawal of routes from a single AS, which may indicate that the AS has reset its BGP session, possibly due to an issue.": 0.1639344262295082,
            "Create a program to compare the AS path length and peer ASN of two or more ASes with the same prefix.": 0.15384615384615383,
            "Collect BGP updates during October 10, 2023, from the 'rrc06' collector. Identify announcements with the community attribute containing '64500:200'. Calculate the percentage of these announcements compared to the total number of announcements during this day.": 0.14814814814814814,
            "Explore the influence of various types of AS relationships\u2014Peer, Customer, and Provider\u2014on the inflation of BGP paths. Utilize BGP data gathered from collectors rrc01 and rrc02 between 14:00 and 15:00 on September 15, 2023. Construct a map to define the relationship type between each AS pair. Compute the effective BGP path length and the shortest path length for each AS pair in the graph. Output a comprehensive list of AS pairs, their associated relationship type, and indicate whether the BGP path is elongated compared to the graph's shortest path.": 0.14285714285714285,
            "Analyze the effects of different AS relationships\u2014Peer, Customer, Provider\u2014on BGP path inflation. We'll use data collected from the rrc00 collector between 10:50 and 11:00 on April 1, 2021. Create a map that assigns the relationship between each AS pair, calculate the actual BGP path length and the graph-theoretical shortest path between each AS pair and output the list of each AS pair, their relationship type, and whether the BGP path is inflated compared to the graph's shortest path.": 0.13592233009708737,
            "Perform a community and policy analysis to understand the implications of MOAS (Multiple Origin AS) events on BGP policy decisions. Use data collected from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Filter BGP records to only include IPv4 updates that carry community values (comm filter). Report on the BGP community values associated with MOAS prefixes and discuss the intent behind these community tags.": 0.13333333333333333,
            "Investigate the historical trends in BGP path length using data collected from the rrc02 collector between 2023-01-01 and 2023-08-01. Perform a time-series analysis to calculate the average BGP path length for each month during this period. Visualize the results using a line chart and annotations indicating significant events that may have influenced path length changes.": 0.1282051282051282,
            "Analyze how different AS relationships contribute to path inflation. Create a map that assigns relationships (Peer, Customer, Provider) between AS pairs. Utilize the same data set from rrc00 between 10:50 and 11:00 on April 1, 2021. Provide a summary output listing each AS pair, their relationship type, and whether the BGP path was inflated compared to the graph shortest path.": 0.125
        },
        "avg_similarity_score": 0.10252136588491824
    },
    {
        "instruction": "Analyse the MOAS (Multiple Origin AS) prefixes to identify ASes with multiple origins. Create a visual representation of the relationship between prefixes and ASes and use AS paths to identify possible discrepancies in the routing information.",
        "input": "Python script using PyBGPStream library for analysis of MOAS behaviour.",
        "output": "import pybgpstream\nfrom collections import defaultdict\nimport time\n\nstream = pybgpstream.BGPStream(project=\"routeviews-stream\", filter=\"prefix more\")\nas_moas_dict = defaultdict(list)\n\nfor elem in stream:\n     prefix = elem.fields.get('prefix', None)\n     if prefix:\n        as_path = elem.fields.get('as-path', None)\n        if as_path:\n            as_list = as_path.split(\" \")\n            origin_asn = int(as_list[-1]) \n            as_moas_dict[origin_asn].append(prefix)\n\nunique_prefixes = set()\nmultiple_origins = []\nfor origin_asn, prefixes in as_moas_dict.items():\n    unique_prefixes.update(prefixes)\n    if len(prefixes) > 1:\n        multiple_origins.append((origin_asn, prefixes))\n\nprint(f\"Total number of prefixes: {len(unique_prefixes)}\")\nprint(f\"Number of ASes with multiple origins: {len(multiple_origins)}\")\n    \nfor origin_asn, prefixes in multiple_origins:\n    print(f\"ASN {origin_asn} has multiple origins for the following prefixes: {prefixes}\")",
        "most_similar_instructions": {
            "Perform a geographical analysis on MOAS (Multiple Origin AS) prefixes to identify the geographical regions from which these prefixes are being announced. Time Frame: Use the BGP data from August 1, 2019, between 14:00:00 and 14:30:00 UTC. Collectors: Use rrc06 as the data collector. Data Type: Focus on BGP update messages. Geographical Data: Utilize the GeoLite2 database to fetch the geographical location of the origin ASes.": 0.2641509433962264,
            "Create a program to compare the AS path length and peer ASN of two or more ASes with the same prefix.": 0.2105263157894737,
            "Analyze how different AS relationships contribute to path inflation. Create a map that assigns relationships (Peer, Customer, Provider) between AS pairs. Utilize the same data set from rrc00 between 10:50 and 11:00 on April 1, 2021. Provide a summary output listing each AS pair, their relationship type, and whether the BGP path was inflated compared to the graph shortest path.": 0.20408163265306123,
            "Investigate routing changes between June 1, 2023, and June 30, 2023, collected from the 'rrc03' collector. Identify the top 5 most frequent AS paths in announcements for IPv4 prefixes. Calculate the percentage of these top AS paths compared to the total number of announcements.": 0.19999999999999998,
            "Analyze the effects of different AS relationships\u2014Peer, Customer, Provider\u2014on BGP path inflation. We'll use data collected from the rrc00 collector between 10:50 and 11:00 on April 1, 2021. Create a map that assigns the relationship between each AS pair, calculate the actual BGP path length and the graph-theoretical shortest path between each AS pair and output the list of each AS pair, their relationship type, and whether the BGP path is inflated compared to the graph's shortest path.": 0.19834710743801653,
            "Generate a Python script using the PyBGPStream library to detect Multiple Origin AS (MOAS) conflicts in BGP data. The script should: Collect BGP updates for IPv4 prefixes during the time interval from '2020-01-01 00:00:00' to '2020-01-15 23:59:59' from the 'route-views' project. Identify MOAS conflicts where a prefix is announced by multiple origin ASes. Display the detected MOAS conflicts, indicating the prefix and the corresponding origin ASes.": 0.19819819819819823,
            "Retrieve BGP update events during August 15, 2023, from the 'rrc04' collector. Identify announcements for prefixes with a length of exactly 16 and 24. Determine the percentage increase in the number of announcements for prefixes with a length of 24 compared to those with a length of 16.": 0.1904761904761905,
            "Perform time-series analysis on the MOAS events from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Identify the timestamps when MOAS events are observed and the frequency of these events during this period. Plot this information on a time-series graph.": 0.18604651162790697,
            "Perform a community and policy analysis to understand the implications of MOAS (Multiple Origin AS) events on BGP policy decisions. Use data collected from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Filter BGP records to only include IPv4 updates that carry community values (comm filter). Report on the BGP community values associated with MOAS prefixes and discuss the intent behind these community tags.": 0.1851851851851852,
            "Retrieve BGP update records from the 'rrc01' collector for the time period between 2023-06-15 12:00:00 and 2023-06-15 14:00:00. Identify and extract MOAS prefixes during this time frame to explore potential multi-homing cases. Present the MOAS prefixes along with their corresponding AS path information.": 0.18181818181818185
        },
        "avg_similarity_score": 0.1434612159614885
    },
    {
        "instruction": "Detect the type of AS path inflation and quantify the increase in path length through PyBGPStream.",
        "input": "Analyze AS path inflation using PyBGPStream. Collect data from the rrc06 and route-views.jinx collectors between the period of January 15, 2021 to January 20, 2021. Compare the actual path length to the graph shortest path length and detect the type of inflation occurred. Output the increase in path length for each instance.",
        "output": "Here's the analysis of AS path inflation using PyBGPStream:\n\n#import modules\nfrom collections import defaultdict\nfrom itertools import groupby\nimport networkx as nx\nimport pybgpstream\n\n#Initialize graph and BGP length map\nas_graph = nx.Graph()\nbgp_lens = defaultdict(lambda: defaultdict(lambda: None))\n\n#Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=\"2021-01-15 00:00:00\", until_time=\"2021-01-20 00:00:00\",\n    collectors=[\"rrc06\", \"route-views.jinx\"],\n    record_type=\"updates\"\n)\n\n#Populate graph and BGP length map\nfor rec in stream.records():\n    for elem in rec:\n        peer = str(elem.peer_asn)\n        hops = [k for k, _ in groupby(elem.fields['as-path'].split(\" \"))]\n        if len(hops) > 1 and hops[0] == peer:\n            origin = hops[-1]\n            for i in range(len(hops) - 1):\n                as_graph.add_edge(hops[i], hops[i + 1])\n            bgp_lens[peer][origin] = min(list(filter(bool, [bgp_lens[peer][origin], len(hops)])))\n\n# Initialize an output map to capture inflation due to relationship\ninflation_map = defaultdict(set)\n\n# Assess the impact of relationships\nfor peer in bgp_lens:\n    for origin in bgp_lens[peer]:\n        try:\n            nxlen = len(nx.shortest_path(as_graph, source=peer, target=origin))\n            increase_in_path_length = bgp_lens[peer][origin] - nxlen\n            inflation_map[increase_in_path_length].add((peer, origin,))\n        except nx.NetworkXNoPath:\n            print(f\"No path exists in the graph between {peer} and {origin}. Skipping.\")\n\n# Print the result\nfor increase_in_path_length in inflation_map:\n    if increase_in_path_length > 0:\n        print(f\"For an increase of {increase_in_path_length} AS hops, the following peer-origin pairs are affected:\")\n        for peer, origin in inflation_map[increase_in_path_length]:\n            print(f\"{peer} - {origin}\")",
        "most_similar_instructions": {
            "Perform prefix analysis to measure AS path inflation and study how path length and preference change over time.": 0.35294117647058826,
            "Create a program to compare the AS path length and peer ASN of two or more ASes with the same prefix.": 0.27027027027027023,
            "Analyze BGP update events with AS path containing '64512' and '65500' during July 20, 2022, from 10 AM to 4 PM. Count the occurrences of different AS path patterns and identify the most common ones.": 0.23529411764705876,
            "Retrieve BGP update events during August 15, 2023, from the 'rrc04' collector. Identify announcements for prefixes with a length of exactly 16 and 24. Determine the percentage increase in the number of announcements for prefixes with a length of 24 compared to those with a length of 16.": 0.21875000000000003,
            "Detect withdrawal spikes for the prefix '192.0.2.0/24' during May 5, 2022, from 12 PM to 8 PM. Identify time windows where the number of withdrawals exceeds 10 and print out the timestamps.": 0.1923076923076923,
            "Perform BGP analysis and detect anomalies in AS path lengths for IPv4 prefixes over two time periods.": 0.1818181818181818,
            "Analyze the effects of different AS relationships\u2014Peer, Customer, Provider\u2014on BGP path inflation. We'll use data collected from the rrc00 collector between 10:50 and 11:00 on April 1, 2021. Create a map that assigns the relationship between each AS pair, calculate the actual BGP path length and the graph-theoretical shortest path between each AS pair and output the list of each AS pair, their relationship type, and whether the BGP path is inflated compared to the graph's shortest path.": 0.1782178217821782,
            "Utilizing the filter attribute, generate JSON dumps of the BGP data collected to provide insights about AS relationship.": 0.17647058823529413,
            "Identify the top hub Autonomous Systems (ASes) in BGP paths using data from collector rrc04 on July 20, 2021, between 10:00 and 11:00. Analyze AS path information and count the occurrence of each AS in the path to determine their hub status. Generate a report listing the top 5 hub ASes along with the number of times they appear in BGP paths.": 0.175,
            "Query BGP update events during June 15, 2023, from the 'rrc10' collector, focusing on announcements where the AS path includes AS 3356 and there's a prefix length of 24. Analyze the frequency of announcements per peer IP address during this time frame.": 0.16949152542372883
        },
        "avg_similarity_score": 0.1288115526450588
    }
]