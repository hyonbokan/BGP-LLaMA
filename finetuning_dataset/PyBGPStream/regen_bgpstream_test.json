[
    {
        "instruction": "Collect RIB records from the 'ris' project from July 23, 2021 at 3:45 PM until August 4, 2021 at 9:30 PM. Use prefix more filter to detect records with a matching prefix of 133.85.0.0/18. Visualize the results.",
        "input": "Collect RIB records from the 'ris' project from July 23, 2021 at 3:45 PM until August 4, 2021 at 9:30 PM. Use prefix more filter to detect records with a 133.85.0.0/18 prefix.",
        "output": "import pybgpstream\nimport matplotlib.pyplot as plt \n\n# Configure BGPStream\nstream = pybgpstream.BGPStream(\n    project=\"ris\",\n    from_time=\"2021-07-23 15:45:00 UTC\",\n    until_time=\"2021-08-04 21:30:00 UTC\",\n    record_type=\"ribs\",\n    filter=\"prefix more 133.85.0.0/18\",\n)\n\n# Store the relevant BGP records\nrelevant_records = []\n\n# Loop over the stream of BGP records\nfor elem in stream:\n    if elem.type == 'R':\n        # Store the: ASN, prefix, and time \n        relevant_records.append([\n            elem.fields['as-path'][0] if elem.fields.get('as-path') else '',\n            elem.fields['prefix'],\n            elem.time\n        ])\n\n# Create a visualization of the results\nasn_counts = {}\nfor record in relevant_records:\n    asn, prefix, timestamp = record\n    if asn in asn_counts:\n        asn_counts[asn] += 1\n    else:\n        asn_counts[asn] = 1\n\n# Build the graph\nplt.bar(range(len(asn_counts)), list(asn_counts.values()))\nplt.xticks(range(len(asn_counts)), list(asn_counts.keys()))\nplt.ylabel(\"Number of Announcements\")\nplt.title(\"Announcements of 133.85.0.0/18\")\nplt.show()",
        "most_similar_instructions": {
            "Collect BGP data from the 'rrc06' collector within the time window of January 1, 2021, 00:00:00 to January 1, 2021, 01:00:00. Focus on the 'updates' record type with peer ASN 65001 and prefix 192.0.2.0/24.": 0.21176470588235297,
            "Perform a geographical analysis on MOAS (Multiple Origin AS) prefixes to identify the geographical regions from which these prefixes are being announced. Time Frame: Use the BGP data from August 1, 2019, between 14:00:00 and 14:30:00 UTC. Collectors: Use rrc06 as the data collector. Data Type: Focus on BGP update messages. Geographical Data: Utilize the GeoLite2 database to fetch the geographical location of the origin ASes.": 0.15929203539823006,
            "Collect BGP updates during October 10, 2023, from the 'rrc06' collector. Identify announcements with the community attribute containing '64500:200'. Calculate the percentage of these announcements compared to the total number of announcements during this day.": 0.1518987341772152,
            "Detect withdrawal spikes for the prefix '192.0.2.0/24' during May 5, 2022, from 12 PM to 8 PM. Identify time windows where the number of withdrawals exceeds 10 and print out the timestamps.": 0.1518987341772152,
            "Compare BGP update events from peer '65000' and peer '65100' during November 15, 2022, from 2 PM to 8 PM. Determine if there are significant differences in the frequency of announcements and withdrawals between the two peers.": 0.15,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.14814814814814817,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP (Border Gateway Protocol) routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.14285714285714285,
            "Examine the Border Gateway Protocol (BGP) update events for the prefix '203.0.113.0/24' during September 1, 2023, from 9 AM to 6 PM. Calculate the percentage of time the prefix was withdrawn and the average interval between announcements.": 0.14285714285714285,
            "Describe the changes in network reachability from July 1, 2023, to July 7, 2023, using BGP updates collected from both the 'rrc01' and 'route-views' collectors. Focus on the withdrawals of IPv6 prefixes and analyze the frequency of these withdrawals per collector.": 0.1411764705882353,
            "Query BGP update events during June 15, 2023, from the 'rrc10' collector, focusing on announcements where the AS path includes AS 3356 and there's a prefix length of 24. Analyze the frequency of announcements per peer IP address during this time frame.": 0.13953488372093023
        },
        "avg_similarity_score": 0.11179460124674533
    },
    {
        "instruction": "Calculate a network-wide measure of AS path inflation of the 'rrc16' collector using custom filters for BGP updates using the PyBGPStream library.",
        "input": "Calculate a network-wide measure of AS path inflation from the 'rrc16' collector for BGP updates using custom filters from the PyBGPStream library.",
        "output": "import pybgpstream\n\n# Configure BGPStream\nstream = pybgpstream.BGPStream(\n    project=\"ris\",\n    collectors=\"rrc16\",\n    record_type=\"updates\",\n)\n\n# Variables to store prefixes and AS paths\nprefixes = set()\npath_lengths = set()\n\n# Loop over the stream of BGP records\nfor elem in stream:\n    # Check if the record is an announcement ('A')\n    if elem.type == 'A':\n        # Store the relevant prefix and AS path\n        path = elem.fields[\"as-path\"].split()\n        prefix = elem.fields[\"prefix\"]\n        prefixes.add(prefix)\n        path_lengths.add(len(path))\n\n# Calculate the network-wide measure of AS path inflation\ninflation_index = 0\nif prefixes and path_lengths:\n    inflation_index = sum(path_lengths) / len(prefixes)\n    inflation_index /= len(max(path_lengths))\n\nprint(f\"Network-wide measure of AS path inflation: {inflation_index}\")",
        "most_similar_instructions": {
            "Collect BGP updates from a specific collector for IPv4 prefixes with a specific BGP community value.": 0.20512820512820512,
            "Perform a community and policy analysis to understand the implications of MOAS (Multiple Origin AS) events on BGP policy decisions. Use data collected from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Filter BGP records to only include IPv4 updates that carry community values (comm filter). Report on the BGP community values associated with MOAS prefixes and discuss the intent behind these community tags.": 0.16842105263157894,
            "Write a Python script using the PyBGPStream library for Real-Time Detection of Subnet Changes. Detect when a larger prefix is suddenly divided into smaller subnets or vice versa, which may indicate potential re-allocation of IP space.": 0.16393442622950818,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.16393442622950818,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP (Border Gateway Protocol) routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.15625,
            "Analyze the preferences of AS paths using data gathered from the collector rrc07 between 08:00 and 09:00 on May 20, 2023. Examine the most common AS paths and the frequency of their occurrence. Visualize the AS topology using a network graph. Output the list of top AS paths and their corresponding frequencies.": 0.15584415584415584,
            "Describe the changes in network reachability from July 1, 2023, to July 7, 2023, using BGP updates collected from both the 'rrc01' and 'route-views' collectors. Focus on the withdrawals of IPv6 prefixes and analyze the frequency of these withdrawals per collector.": 0.15384615384615383,
            "Write a Python script using the PyBGPStream library for Real-Time Detection of Short-lived Prefix Announcements (Prefix Flapping). Detect when a prefix is announced and withdrawn repeatedly in a short time window (prefix flapping), which may indicate network instability or misconfiguration.": 0.15384615384615383
        },
        "avg_similarity_score": 0.11704431666989992
    },
    {
        "instruction": "Access real-time stream data from the 'ris' project and print the record type, the BGP prefix and the ASN for each record.",
        "input": "Access real-time stream data from the 'ris' project and print the record type, the BGP prefix and the ASN for each record.",
        "output": "import pybgpstream\n\n# Configure BGPStream\nstream = pybgpstream.BGPStream(\n    project=\"ris\",\n    record_type=\"updates\",\n    use_live_data=True,\n)\n\n# Accessing the stream of BGP records\nfor elem in stream:\n    # Extract the required fields\n    record_type = elem.type\n    as_number = elem.fields.get(\"as-path\", \"\")\n    prefix = elem.fields.get(\"prefix\", \"\")\n    \n    # Print the record details\n    print(f\"Record Type: {record_type}, AS Number: {as_number}, Prefix: {prefix}\")",
        "most_similar_instructions": {
            "Analyze BGP community usage trends using data from collector rrc02 on June 1, 2021, between 00:00 and 01:00. Calculate the frequency of each BGP community and identify the top 5 most commonly used communities.": 0.23728813559322037,
            "Collect BGP data from the 'rrc06' collector within the time window of January 1, 2021, 00:00:00 to January 1, 2021, 01:00:00. Focus on the 'updates' record type with peer ASN 65001 and prefix 192.0.2.0/24.": 0.2153846153846154,
            "Analyze prefix announcements and withdrawals using BGP data from collector rrc04 on February 25, 2021, between 10:00 and 11:00. Count the frequency of announcements and withdrawals for each prefix and identify the top 5 most announced and withdrawn prefixes. Generate a report displaying the top 5 prefixes for both announcements and withdrawals along with their corresponding counts.": 0.1951219512195122,
            "Investigate the historical trends in BGP path length using data collected from the rrc02 collector between 2023-01-01 and 2023-08-01. Perform a time-series analysis to calculate the average BGP path length for each month during this period. Visualize the results using a line chart and annotations indicating significant events that may have influenced path length changes.": 0.1927710843373494,
            "Perform time-series analysis on the MOAS events from the 'rrc00' collector between 7:50 am and 8:10 am UTC on August 1, 2015. Identify the timestamps when MOAS events are observed and the frequency of these events during this period. Plot this information on a time-series graph.": 0.19178082191780824,
            "Collect data for one-hour intervals over three hours between 7:00 AM and 10:00 AM on August 10, 2015. Count the number of unique prefixes announced for each BGP community. Generate a summary of historical trends showing how the number of unique prefixes for each community evolves over time.": 0.18918918918918923,
            "Explore the influence of various types of AS relationships\u2014Peer, Customer, and Provider\u2014on the inflation of BGP paths. Utilize BGP data gathered from collectors rrc01 and rrc02 between 14:00 and 15:00 on September 15, 2023. Construct a map to define the relationship type between each AS pair. Compute the effective BGP path length and the shortest path length for each AS pair in the graph. Output a comprehensive list of AS pairs, their associated relationship type, and indicate whether the BGP path is elongated compared to the graph's shortest path.": 0.18803418803418803,
            "Examine the Border Gateway Protocol (BGP) update events for the prefix '203.0.113.0/24' during September 1, 2023, from 9 AM to 6 PM. Calculate the percentage of time the prefix was withdrawn and the average interval between announcements.": 0.1875,
            "Analyze the effects of different AS relationships\u2014Peer, Customer, Provider\u2014on BGP path inflation. We'll use data collected from the rrc00 collector between 10:50 and 11:00 on April 1, 2021. Create a map that assigns the relationship between each AS pair, calculate the actual BGP path length and the graph-theoretical shortest path between each AS pair and output the list of each AS pair, their relationship type, and whether the BGP path is inflated compared to the graph's shortest path.": 0.1851851851851852
        },
        "avg_similarity_score": 0.1512766817363425
    },
    {
        "instruction": "Access the 'rrc19' collector to create a list of communities associated with ASN 3462 for BGP updates.",
        "input": "Access the 'rrc19' collector to create a list of communities associated with ASN 3462 for BGP updates.",
        "output": "import pybgpstream\n\n# Configure BGPStream\nstream = pybgpstream.BGPStream(\n    project=\"ris\",\n    collectors=\"rrc19\",\n    record_type=\"updates\",\n)\n\n# Store the communities associated with the given ASN\nasn_communities = set()\n\n# Loop over the stream of BGP records\nfor elem in stream:\n    # Check if the record is an announcement ('A')\n    if elem.type == 'A':\n        as_path = elem.fields.get('as-path', '')\n        if '3462' in as_path.split():\n            communities = elem.fields.get('communities', '')\n            asn_communities |= set(communities.split())\n\n# Print the list of communities associated with the given ASN\nprint(f\"Communities associated with ASN 3462: {list(asn_communities)}\")",
        "most_similar_instructions": {
            "Calculate a network-wide measure of AS path inflation of the 'rrc16' collector using custom filters for BGP updates using the PyBGPStream library.": 0.25,
            "Access real-time stream data from the 'ris' project and print the record type, the BGP prefix and the ASN for each record.": 0.19999999999999998,
            "Collect BGP updates from a specific collector for IPv4 prefixes with a specific BGP community value.": 0.1818181818181818,
            "Collect BGP data from the 'rrc06' collector within the time window of January 1, 2021, 00:00:00 to January 1, 2021, 01:00:00. Focus on the 'updates' record type with peer ASN 65001 and prefix 192.0.2.0/24.": 0.16949152542372883,
            "Retrieve BGP update events during August 15, 2023, from the 'rrc04' collector. Identify announcements for prefixes with a length of exactly 16 and 24. Determine the percentage increase in the number of announcements for prefixes with a length of 24 compared to those with a length of 16.": 0.15384615384615385,
            "Collect BGP updates during October 10, 2023, from the 'rrc06' collector. Identify announcements with the community attribute containing '64500:200'. Calculate the percentage of these announcements compared to the total number of announcements during this day.": 0.1509433962264151,
            "Identify the top hub Autonomous Systems (ASes) in BGP paths using data from collector rrc04 on July 20, 2021, between 10:00 and 11:00. Analyze AS path information and count the occurrence of each AS in the path to determine their hub status. Generate a report listing the top 5 hub ASes along with the number of times they appear in BGP paths.": 0.14814814814814814,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.14545454545454545,
            "Investigate variations in local preference values associated with BGP communities using data from collector rrc03 on July 15, 2021, between 10:00 and 11:00.": 0.14285714285714282,
            "Analyze the preferences of AS paths using data gathered from the collector rrc07 between 08:00 and 09:00 on May 20, 2023. Examine the most common AS paths and the frequency of their occurrence. Visualize the AS topology using a network graph. Output the list of top AS paths and their corresponding frequencies.": 0.1408450704225352
        },
        "avg_similarity_score": 0.11614678182454337
    },
    {
        "instruction": "Compare the AS paths in the \"ris\" project to a given AS path using exact match.",
        "input": "Compare the AS paths in the \"ris\" project to a given AS path '65412 65501 1989' using exact match.",
        "output": "import pybgpstream\n\n# Configure BGPStream\nstream = pybgpstream.BGPStream(\n    project=\"ris\",\n    record_type=\"updates\",\n)\n\n# List of ASNs in the given path\ngiven_asns = '65412 65501 1989'.split()\n\n# Store the relevant BGP records\nmatching_records = []\n\n# Loop over the stream of BGP records\nfor elem in stream:\n    # Check if the record is an announcement ('A')\n    if elem.type == 'A':\n        as_path = elem.fields[\"as-path\"].split()\n        prefix = elem.fields[\"prefix\"]\n        if sorted(as_path) == sorted(given_asns):  # Perform exact match\n            matching_records.append([prefix, given_asns])\n\n# Print the list of matching records\nfor record in matching_records:\n    print(f\"Matching Prefix: {record[0]}, AS Path: {record[1]}\")\n\n# If no records were found\nif not matching_records:\n    print(\"No matching records found.\")",
        "most_similar_instructions": {
            "Calculate a network-wide measure of AS path inflation of the 'rrc16' collector using custom filters for BGP updates using the PyBGPStream library.": 0.20512820512820512,
            "Investigate routing changes between June 1, 2023, and June 30, 2023, collected from the 'rrc03' collector. Identify the top 5 most frequent AS paths in announcements for IPv4 prefixes. Calculate the percentage of these top AS paths compared to the total number of announcements.": 0.19999999999999998,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.18518518518518517,
            "Access the 'rrc19' collector to create a list of communities associated with ASN 3462 for BGP updates.": 0.1818181818181818,
            "Perform BGP analysis and detect anomalies in AS path lengths for IPv4 prefixes over two time periods.": 0.1818181818181818,
            "Collect BGP RIB entries from a specific collector for IPv6 prefixes announced by AS path containing ASN 56789.": 0.17647058823529413,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP (Border Gateway Protocol) routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.17543859649122806,
            "Analyze the preferences of AS paths using data gathered from the collector rrc07 between 08:00 and 09:00 on May 20, 2023. Examine the most common AS paths and the frequency of their occurrence. Visualize the AS topology using a network graph. Output the list of top AS paths and their corresponding frequencies.": 0.17142857142857143,
            "Determine the AS relationships involved in MOAS prefixes to understand if they belong to the same organization or different organizations. Use the 'rrc00' collector for data between 7:50 am and 8:10 am UTC on August 1, 2015. Filter based on AS path to include records that have at least one AS that is known to belong to a large organization (for example, AS 65501).": 0.17073170731707316,
            "Collect RIB records from the 'ris' project from July 23, 2021 at 3:45 PM until August 4, 2021 at 9:30 PM. Use prefix more filter to detect records with a matching prefix of 133.85.0.0/18. Visualize the results.": 0.16949152542372883
        },
        "avg_similarity_score": 0.11909200446081707
    },
    {
        "instruction": "Count the number of announcing ASes for each prefix seen with an AS path containing ASN 65501 in the period from January 1, 2021 to January 5, 2021 and generate a detailed report of the results.",
        "input": "Counting the number of announcing ASes for each prefix seen with an AS path containing ASN 65501 from January 1, 2021 to January 5, 2021.",
        "output": "import pybgpstream\nfrom collections import Counter\n\n# Initialize BGP Stream\nstream = pybgpstream.BGPStream(\n    from_time=\"2021-01-01 00:00:00\", until_time=\"2021-01-05 00:00:00\",\n    project=\"ris\",\n    filter=\"ipversion 4 and path '_65501_'\"\n)\n\n# Counters for prefixes seen\nprefix_counter = Counter()\n\n# Loop through the stream records\nfor rec in stream.records():\n\tfor elem in rec:\n\t\tprefix = elem.fields.get('prefix', None)\n\t\t# Count the number of announcers for each prefix\n\t\tif prefix:\n\t\t\tprefix_counter[prefix] += 1\n\n# Print the results\nprint(\"Announcing ASes for Each Prefix Seen:\")\nfor prefix, count in prefix_counter.most_common():\n\tprint(f\"{prefix}: {count} announcing ASes\")",
        "most_similar_instructions": {
            "Analyze prefix announcements and withdrawals using BGP data from collector rrc04 on February 25, 2021, between 10:00 and 11:00. Count the frequency of announcements and withdrawals for each prefix and identify the top 5 most announced and withdrawn prefixes. Generate a report displaying the top 5 prefixes for both announcements and withdrawals along with their corresponding counts.": 0.27368421052631575,
            "Investigate BGP update events originating from the 'rrc00' collector, with the goal of analyzing patterns in announcement (A) messages over a specified period. Specifically, focus on announcements with AS path containing '65000' and '65500', within the timeframe from September 1, 2023, 8:00 AM to September 3, 2023, 11:59 PM. Identify trends and visualize the time distribution of these announcements.": 0.24742268041237114,
            "Identify the top hub Autonomous Systems (ASes) in BGP paths using data from collector rrc04 on July 20, 2021, between 10:00 and 11:00. Analyze AS path information and count the occurrence of each AS in the path to determine their hub status. Generate a report listing the top 5 hub ASes along with the number of times they appear in BGP paths.": 0.24000000000000005,
            "Compare the AS paths in the \"ris\" project to a given AS path using exact match.": 0.23076923076923078,
            "Collect BGP data from the 'rrc06' collector within the time window of January 1, 2021, 00:00:00 to January 1, 2021, 01:00:00. Focus on the 'updates' record type with peer ASN 65001 and prefix 192.0.2.0/24.": 0.23076923076923075,
            "Collect data for one-hour intervals over three hours between 7:00 AM and 10:00 AM on August 10, 2015. Count the number of unique prefixes announced for each BGP community. Generate a summary of historical trends showing how the number of unique prefixes for each community evolves over time.": 0.2298850574712644,
            "Analyze BGP update events with AS path containing '64512' and '65500' during July 20, 2022, from 10 AM to 4 PM. Count the occurrences of different AS path patterns and identify the most common ones.": 0.22535211267605634,
            "Describe the changes in network reachability from July 1, 2023, to July 7, 2023, using BGP updates collected from both the 'rrc01' and 'route-views' collectors. Focus on the withdrawals of IPv6 prefixes and analyze the frequency of these withdrawals per collector.": 0.20512820512820512,
            "Collect data for one-hour intervals over a period of three hours between 7:00 AM and 10:00 AM on 10th August 2015. For each one-hour interval, count the number of unique prefixes that are announced for each BGP community. Generate a summary of historical trends that shows how the number of unique prefixes for each community evolves over time.": 0.20408163265306123,
            "Collect RIB records from the 'ris' project from July 23, 2021 at 3:45 PM until August 4, 2021 at 9:30 PM. Use prefix more filter to detect records with a matching prefix of 133.85.0.0/18. Visualize the results.": 0.20253164556962022
        },
        "avg_similarity_score": 0.15590688307362094
    },
    {
        "instruction": "Access live stream data from the RIS project between June 17, 2021 and June 18, 2021, using two collectors (rrc00 and rrc01) and meaure AS path inflation. Create a detailed report of the results.",
        "input": "Accessing live stream data from the RIS project from June 17, 2021 to June 18, 2021, through both rrc00 and rrc01 and measuring AS path inflation.",
        "output": "import pybgpstream\nfrom collections import Counter\n\n# Initialize BGP Stream\nstream = pybgpstream.BGPStream(\n    from_time=\"2021-06-17 00:00:00\", until_time=\"2021-06-18 00:00:00\",\n    project=\"ris\",\n    collectors=\"rrc00,rrc01\",\n    record_type=\"updates\",\n    filter=\"ipversion 4\"\n)\n\n# Counters for prefixes seen\npath_inflation_counter = Counter()\n\n# Loop through the stream records\nfor rec in stream.records():\n\tfor elem in rec:\n\t\taspaths = elem.fields.get('aspaths', None)\n\t\tif aspaths:\n\t\t\t# Calculate AS path inflation\n\t\t\tinflation = len(aspaths[0]) - len(aspaths[-1])\n\t\t\t# Count the number of prefixes with same inflation rate\n\t\t\tpath_inflation_counter[inflation] += 1\n\n# Print the results\nprint(\"AS Path Inflation Results:\")\nfor inflation, count in path_inflation_counter.most_common():\n\tprint(f\"{inflation} AS hops difference: {count} prefixes\")",
        "most_similar_instructions": {
            "Access real-time stream data from the 'ris' project and print the record type, the BGP prefix and the ASN for each record.": 0.3508771929824562,
            "Count the number of announcing ASes for each prefix seen with an AS path containing ASN 65501 in the period from January 1, 2021 to January 5, 2021 and generate a detailed report of the results.": 0.28571428571428575,
            "Collect RIB records from the 'ris' project from July 23, 2021 at 3:45 PM until August 4, 2021 at 9:30 PM. Use prefix more filter to detect records with a matching prefix of 133.85.0.0/18. Visualize the results.": 0.2597402597402597,
            "Identify Autonomous Systems (ASes) and their corresponding peer relationships using BGP data from collector route-views2 on May 15, 2021, between 00:00 and 01:00. Extract AS path information and determine which ASes are peers for each AS. Create a report listing the AS numbers along with their peers.": 0.2380952380952381,
            "Analyze the preferences of AS paths using data gathered from the collector rrc07 between 08:00 and 09:00 on May 20, 2023. Examine the most common AS paths and the frequency of their occurrence. Visualize the AS topology using a network graph. Output the list of top AS paths and their corresponding frequencies.": 0.2045454545454545,
            "Identify the top hub Autonomous Systems (ASes) in BGP paths using data from collector rrc04 on July 20, 2021, between 10:00 and 11:00. Analyze AS path information and count the occurrence of each AS in the path to determine their hub status. Generate a report listing the top 5 hub ASes along with the number of times they appear in BGP paths.": 0.20408163265306123,
            "Compare the AS paths in the \"ris\" project to a given AS path using exact match.": 0.2,
            "Identify Autonomous Systems (ASes) that potentially employ AS Path Prepending based on BGP data from collector route-views2 on January 15, 2021, between 00:00 and 01:00. Count and list ASes that engage in AS Path Prepending, along with the number of prepend events detected.": 0.19999999999999998,
            "Analyze BGP community usage trends using data from collector rrc02 on June 1, 2021, between 00:00 and 01:00. Calculate the frequency of each BGP community and identify the top 5 most commonly used communities.": 0.19999999999999998,
            "Access the 'rrc19' collector to create a list of communities associated with ASN 3462 for BGP updates.": 0.19607843137254904
        },
        "avg_similarity_score": 0.145809447986664
    },
    {
        "instruction": "Use PyBGPStream to study the communities of the prefixes seen each day during the period between April 23, 2021 and April 26, 2021, from the rrc07 collector.",
        "input": "Studying the communities of the prefixes seen each day through the rrc07 collector from April 23, 2021 to April 26, 2021.",
        "output": "import pybgpstream\nfrom collections import defaultdict\n\n# Initialize BGP Stream\nstream = pybgpstream.BGPStream(\n    from_time=\"2021-04-23 00:00:00\", until_time=\"2021-04-26 24:00:00\",\n    project=\"ris\",\n    collectors=\"rrc07\",\n    record_type=\"updates\",\n    filter=\"ipversion 4\"\n)\n\n# Counters for prefixes seen\ndate_counter = defaultdict(dict)\n\n# Loop through the stream records\nfor rec in stream.records():\n    if rec.type == 'updates':\n        # Extract date from record timestamp\n        date = rec.time.strftime(\"%Y-%m-%d\")\n        # Count prefixes for each day\n        if rec.fields[\"communities\"]:\n            for community in rec.fields[\"communities\"]:\n                date_counter[date][community] = date_counter[date].get(community, 0) + 1\n\n# Print the results\nprint(\"Community Statistics:\")\nfor date, communities in date_counter.items():\n    print(f\"Prefixes Seen on {date}:\")\n    for community, count in communities.items():\n        print(f\"{community}: {count} prefixes\")\n    print(\"\\n\")",
        "most_similar_instructions": {
            "Count the number of announcing ASes for each prefix seen with an AS path containing ASN 65501 in the period from January 1, 2021 to January 5, 2021 and generate a detailed report of the results.": 0.25396825396825395,
            "Describe the changes in network reachability from July 1, 2023, to July 7, 2023, using BGP updates collected from both the 'rrc01' and 'route-views' collectors. Focus on the withdrawals of IPv6 prefixes and analyze the frequency of these withdrawals per collector.": 0.20289855072463767,
            "Retrieve BGP announcement records for IPv6 prefixes from the collector 'route-views.eqix'.": 0.2,
            "Access real-time stream data from the 'ris' project and print the record type, the BGP prefix and the ASN for each record.": 0.19999999999999998,
            "Access live stream data from the RIS project between June 17, 2021 and June 18, 2021, using two collectors (rrc00 and rrc01) and meaure AS path inflation. Create a detailed report of the results.": 0.19672131147540983,
            "Monitor the number of unique prefixes for each BGP community between 7:00 AM and 9:00 AM on 10th August 2015. Trigger an alert if the number of unique prefixes for a community changes by more than 20% between two consecutive 10-minute intervals.": 0.19444444444444445,
            "Explore BGP update events from the 'rrc00' and 'rrc04' collectors, focusing on announcements involving the community value '65001:123'. The analysis should cover the period from April 1, 2023, 12:00 PM to April 5, 2023, 11:59 PM. Identify the unique ASes that originated these announcements and list them.": 0.18181818181818182,
            "Generate a Python script using the PyBGPStream library to detect Multiple Origin AS (MOAS) conflicts in BGP data. The script should: Collect BGP updates for IPv4 prefixes during the time interval from '2020-01-01 00:00:00' to '2020-01-15 23:59:59' from the 'route-views' project. Identify MOAS conflicts where a prefix is announced by multiple origin ASes. Display the detected MOAS conflicts, indicating the prefix and the corresponding origin ASes.": 0.1764705882352941,
            "Examine the Border Gateway Protocol (BGP) update events for the prefix '203.0.113.0/24' during September 1, 2023, from 9 AM to 6 PM. Calculate the percentage of time the prefix was withdrawn and the average interval between announcements.": 0.1764705882352941,
            "Analyze BGP updates between September 1, 2023, and September 15, 2023, collected from the 'rrc05' collector. Focus on withdrawals with the AS path containing at least one instance of AS 2914. Calculate the average number of withdrawals per day during this period.": 0.17391304347826086
        },
        "avg_similarity_score": 0.13249695132075676
    },
    {
        "instruction": "Extract the AS path of each IPv6 prefix seen between June 6, 2021 and June 10, 2021 from the route-views4 collector.",
        "input": "Extracting the AS path of each IPv6 prefix seen from the route-views4 collector between June 6, 2021 and June 10, 2021.",
        "output": "import pybgpstream\n\n# Initialize BGP Stream\nstream = pybgpstream.BGPStream(\n    from_time=\"2021-06-06 00:00:00\", until_time=\"2021-06-10 24:00:00\",\n    project=\"ris\",\n    collectors=\"route-views4\",\n    record_type=\"updates\",\n    filter=\"ipversion 6\"\n)\n\n# Counters for prefixes seen\naspaths = {}\n\n# Loop through the stream records\nfor rec in stream.records():\n\tif rec.type == 'updates':\n\t\t# Extract prefix from record timestamp\n\t\tprefix = rec.fields.get('prefix', None)\n\t\t# Extract AS path for each prefix seen\n\t\tif prefix:\n\t\t\taspaths[prefix] = rec.fields.get('aspaths', None)[0]\n\n# Print the results\nprint(\"AS Paths Seen:\")\nfor prefix, aspath in aspaths.items():\n\tprint(f\"{prefix}: {aspath}\")",
        "most_similar_instructions": {
            "Use PyBGPStream to study the communities of the prefixes seen each day during the period between April 23, 2021 and April 26, 2021, from the rrc07 collector.": 0.40816326530612246,
            "Access live stream data from the RIS project between June 17, 2021 and June 18, 2021, using two collectors (rrc00 and rrc01) and meaure AS path inflation. Create a detailed report of the results.": 0.2857142857142857,
            "Count the number of announcing ASes for each prefix seen with an AS path containing ASN 65501 in the period from January 1, 2021 to January 5, 2021 and generate a detailed report of the results.": 0.27586206896551724,
            "Retrieve BGP announcement records for IPv6 prefixes from the collector 'route-views.eqix'.": 0.2285714285714286,
            "Calculate a network-wide measure of AS path inflation of the 'rrc16' collector using custom filters for BGP updates using the PyBGPStream library.": 0.22222222222222224,
            "Investigate routing changes between June 1, 2023, and June 30, 2023, collected from the 'rrc03' collector. Identify the top 5 most frequent AS paths in announcements for IPv4 prefixes. Calculate the percentage of these top AS paths compared to the total number of announcements.": 0.2121212121212121,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.19999999999999998,
            "Write a Python script using the PyBGPStream library to detect real-time anomalies in BGP (Border Gateway Protocol) routes. Flag and alert when: A new AS path is observed for an existing prefix. A known prefix suddenly disappears from the stream.": 0.19047619047619044,
            "Describe the changes in network reachability from July 1, 2023, to July 7, 2023, using BGP updates collected from both the 'rrc01' and 'route-views' collectors. Focus on the withdrawals of IPv6 prefixes and analyze the frequency of these withdrawals per collector.": 0.18749999999999997,
            "Monitor the number of unique prefixes for each BGP community between 7:00 AM and 9:00 AM on 10th August 2015. Trigger an alert if the number of unique prefixes for a community changes by more than 20% between two consecutive 10-minute intervals.": 0.17910447761194032
        },
        "avg_similarity_score": 0.14254754353094
    }
]