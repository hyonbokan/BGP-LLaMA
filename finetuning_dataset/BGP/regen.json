[
    {
        "instruction": "Identify the MOASes that announce AS 2497 and determine the path inflation.",
        "input": "ASN: 2497\nFilter: path \"_2497_\"",
        "output": "import pybgpstream\nfrom collections import Counter\n\nstream = pybgpstream.BGPStream(\n    from_time=\"2020-10-01 00:00:00\",\n    until_time=\"2020-10-31 00:00:00\",\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\", \"ris-ripe\"],\n    record_type=\"updates\",\n    filter=\"path \\\"_2497_\\\"\"\n)\n\nas_paths = []\n\nfor rec in stream.records():\n    for elem in rec:\n      if elem.type == \"A\":\n        as_paths.append(elem.fields[\"as-path\"].split()[0])\n\nmoases = Counter(as_paths).most_common()\n\n# Calculate path inflation\npath_inflation = 0\nfor moas in moases:\n    path_inflation += (moas[1] - 1)\n\nprint(f\"MOASes: {moases}\")\nprint(f\"Path inflation for AS 2497: {path_inflation}\")",
        "most_similar_instructions": {
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.16393442622950824,
            "Collect BGP update data for April 26, 2017, from multiple RouteViews collectors. Calculate and visualize the trends in BGP announcements by AS12389 per minute. Identify the prefixes originated by AS12389. Detect anomalies by setting a threshold and reporting any minute with an announcement count exceeding the threshold as an anomaly.": 0.12903225806451613,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.11999999999999998,
            "Collect BGP update data for November 12, 2018, to November 13, 2018, from multiple RouteViews collectors. Identify BGP announcements for the suspicious prefix 216.58.192.0/19 that involve ASNs 20485 (TransTelecom), 4809 (China Telecom), or 37282 (MainOne). Create a bar chart showing the number of occurrences of each ASN in the suspicious AS paths.": 0.11764705882352941,
            "Collect BGP update data for April 25, 2018, to April 26, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS10297 (eNet) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.11111111111111112,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.1095890410958904,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.1081081081081081,
            "Collect BGP update data for July 29, 2018, to July 31, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS58224 (Iran Telecommunication Company) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.10714285714285714,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.10526315789473685
        },
        "avg_similarity_score": 0.09679643109434523
    },
    {
        "instruction": "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.",
        "input": "Collectors: route-views2, route-views3, route-views4, ris-ripe\nRecord Type: updates",
        "output": "import pybgpstream\n\nas_path_lengths = []\npreference_values = []\n\nstream = pybgpstream.BGPStream(\n    from_time=\"2020-10-01 00:00:00\",\n    until_time=\"2020-10-31 00:00:00\",\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\", \"ris-ripe\"],\n    record_type=\"updates\"\n)\n\nfor rec in stream.records():\n    for elem in rec:\n        as_path_lengths.append(len(elem.fields[\"as-path\"].split()))\n        preference_values.append(elem.fields[\"preference\"])\n\n# Perform time-series analysis\nprint(f\"AS Path lengths: {as_path_lengths}\")\nprint(f\"Preference values: {preference_values}\")",
        "most_similar_instructions": {
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.13559322033898305,
            "Collect BGP update data for April 25, 2018, to April 26, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS10297 (eNet) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.12698412698412698,
            "Collect BGP update data for July 29, 2018, to July 31, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS58224 (Iran Telecommunication Company) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.12307692307692307,
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.12121212121212123,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.12121212121212122,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.11428571428571428,
            "Collect BGP update data for April 26, 2017, from multiple RouteViews collectors. Calculate and visualize the trends in BGP announcements by AS12389 per minute. Identify the prefixes originated by AS12389. Detect anomalies by setting a threshold and reporting any minute with an announcement count exceeding the threshold as an anomaly.": 0.11267605633802817,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.10958904109589042,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.10869565217391305,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.1075268817204301
        },
        "avg_similarity_score": 0.10367113588343933
    },
    {
        "instruction": "Identify the top 10 AS paths with the highest number of transits of IPv4 prefixes originated from AS 111 ayde-11.",
        "input": "Prefix: ayde-11\nIP Version: 4\nFilter: path \"_111_\"",
        "output": "import pybgpstream\nfrom collections import Counter\n\nstream = pybgpstream.BGPStream(\n    from_time=\"2020-10-01 00:00:00\",\n    until_time=\"2020-10-31 00:00:00\",\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\", \"ris-ripe\"],\n    record_type=\"updates\",\n    filter=\"prefix ayde-11 and ipversion 4 and path \\\"_111_\\\"\"\n)\n\nas_paths = []\n\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            as_paths.append(elem.fields[\"as-path\"])\n\ntop_10_paths = Counter(as_paths).most_common(10)\n\n# Calculate number of transits\ntransits = []\nfor path in top_10_paths:\n    transits.append(len(path[0].split()) - 2)\n\nprint(f\"Top 10 AS paths with the highest number of transits for IPv4 prefix ayde-11 originated from AS 111: {top_10_paths}\")\nprint(f\"Number of transits: {transits}\")",
        "most_similar_instructions": {
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.24242424242424246,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.22857142857142856,
            "Collect BGP update data for November 12, 2018, to November 13, 2018, from multiple RouteViews collectors. Identify BGP announcements for the suspicious prefix 216.58.192.0/19 that involve ASNs 20485 (TransTelecom), 4809 (China Telecom), or 37282 (MainOne). Create a bar chart showing the number of occurrences of each ASN in the suspicious AS paths.": 0.18181818181818182,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.17391304347826086,
            "Collect BGP announcement data for AS12389 from multiple RouteViews collectors for the time window between April 26, 2017, 22:00:00 and April 26, 2017, 23:00:00. Identify and report anomalies in BGP announcements for AS12389, specifically if the number of announcements exceeds a threshold of 1000 per minute. Additionally, provide a list of the top 5 prefixes originated by AS12389 during this time window.": 0.16091954022988506,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 00:00:00 on January 22, 2006, and 00:00:00 on January 23, 2006. Analyze BGP announcements by Con Edison (AS27506) and create two plots: 1) a bar chart showing the number of announcements for each prefix, and 2) a scatter plot showing the timestamps of announcements for the top 10 prefixes with the highest number of announcements. The timestamps should be in UTC format.": 0.16,
            "Collect BGP update data for April 25, 2018, to April 26, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS10297 (eNet) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.15873015873015875,
            "Collect BGP update data for July 29, 2018, to July 31, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS58224 (Iran Telecommunication Company) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.15384615384615383,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.15151515151515152,
            "Collect BGP update data for April 26, 2017, from multiple RouteViews collectors. Calculate and visualize the trends in BGP announcements by AS12389 per minute. Identify the prefixes originated by AS12389. Detect anomalies by setting a threshold and reporting any minute with an announcement count exceeding the threshold as an anomaly.": 0.1408450704225352
        },
        "avg_similarity_score": 0.1294144251328824
    },
    {
        "instruction": "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.",
        "input": "Collectors: zebra\nFilter: peer 10.0.0.1 or peer 10.0.0.2",
        "output": "import pybgpstream\n\nstream = pybgpstream.BGPStream(\n    from_time=\"2020-10-01 00:00:00\",\n    until_time=\"2020-10-31 00:00:00\",\n    collectors=[\"zebra\"],\n    record_type=\"updates\",\n    filter=\"peer 10.0.0.1 or peer 10.0.0.2\"\n)\n\nfor rec in stream.records():\n    for elem in rec:\n        print(elem.fields[\"prefix\"], elem.fields[\"as-path\"], elem.fields[\"peer-asn\"])",
        "most_similar_instructions": {
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.23255813953488372,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.13513513513513511,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.12987012987012989,
            "Collect BGP update data for November 12, 2018, to November 13, 2018, from multiple RouteViews collectors. Identify and display BGP announcements where the suspicious prefix 216.58.192.0/19 is announced by ASNs 20485 (TransTelecom), 4809 (China Telecom), or 37282 (MainOne). Create a time series plot showing the number of suspicious announcements over time.": 0.12987012987012989,
            "Collect BGP update data for November 12, 2018, to November 13, 2018, from multiple RouteViews collectors. Identify BGP announcements for the suspicious prefix 216.58.192.0/19 that involve ASNs 20485 (TransTelecom), 4809 (China Telecom), or 37282 (MainOne). Create a bar chart showing the number of occurrences of each ASN in the suspicious AS paths.": 0.12820512820512822,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.12048192771084337,
            "Collect BGP update data from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Focus on AS23724 and analyze the number of BGP announcements made by AS23724 on an hourly basis during that time period. Additionally, identify the top 10 most common AS paths announced by AS23724 on April 8, 2010, and visualize them.": 0.11363636363636363,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.11267605633802816,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.09999999999999999
        },
        "avg_similarity_score": 0.0961369764508651
    },
    {
        "instruction": "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.",
        "input": "ASN: 15487\nCollectors: route-views2, rrc01, ris-ripe",
        "output": "import pybgpstream\nfrom collections import Counter\n\nstream = pybgpstream.BGPStream(\n    from_time=\"2020-10-01 00:00:00\",\n    until_time=\"2020-10-31 00:00:00\",\n    collectors=[\"route-views2\", \"rrc01\", \"ris-ripe\"],\n    record_type=\"updates\"\n)\n\ncommunities = []\n\nfor rec in stream.records():\n    for elem in rec:\n        if \"15487\" in elem.fields[\"as-path\"]:\n            communities.append(elem.fields[\"communities\"])\n\n# Generate report\nprint(f\"AS 15487 communities: {Counter(communities).most_common(10)}\")\nprint(f\"Total number of announcements: {len(communities)}\")",
        "most_similar_instructions": {
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.2580645161290323,
            "Identify the top 10 AS paths with the highest number of transits of IPv4 prefixes originated from AS 111 ayde-11.": 0.25,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.2,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.2,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.1764705882352941,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 00:00:00 on January 22, 2006, and 00:00:00 on January 23, 2006. Analyze BGP announcements by Con Edison (AS27506) and create two plots: 1) a bar chart showing the number of announcements for each prefix, and 2) a scatter plot showing the timestamps of announcements for the top 10 prefixes with the highest number of announcements. The timestamps should be in UTC format.": 0.16326530612244897,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.16216216216216217,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.15,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.14814814814814814
        },
        "avg_similarity_score": 0.1455307109599202
    },
    {
        "instruction": "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.",
        "input": "Time window: February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC\nCollector: route-views.jj\nRecord Type: ribs, updates\nASN: 33636",
        "output": "import pybgpstream\nfrom datetime import datetime\nfrom collections import defaultdict\n\n# Define the time window around the incident\nstart_time = \"2021-02-12 12:00:00 UTC\"\nend_time = \"2021-02-12 13:59:59 UTC\"\n\n# Initializing BGPStream with a filter to collect information from route-views.jj\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views.jj\"],\n    record_type=\"updates\"\n)\n\n# Store BGP information in a dictionary \nbgp_info = defaultdict(dict)\nbgp_info['as_path'] = []\nbgp_info['local_preference'] = []\nbgp_info['origin'] = []\nbgp_info['med'] = []\nbgp_info['communities'] = []\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.peer_asn == 33636:\n            # AS Path\n            as_path = elem.fields[\"as-path\"].split()\n            bgp_info['as_path'].append(as_path)\n            # Local Preference\n            local_preference = elem.fields[\"local-pref\"]\n            bgp_info['local_preference'].append(local_preference)\n            # Origin\n            origin = elem.fields[\"origin\"]\n            bgp_info['origin'].append(origin)\n            # MED\n            med = elem.fields[\"med\"]\n            bgp_info['med'].append(med)\n            # BGP Communities\n            communities = elem.fields[\"communities\"].split(' ')\n            bgp_info['communities'].append(communities)\n\n# Studying the communities of prefixes belonging to AS33636 \nprint('AS Path length:', bgp_info['as_path'])\nprint('Local Preference:', bgp_info['local_preference'])\nprint('Origin:', bgp_info['origin'])\nprint('MED:', bgp_info['med'])\nprint('Communities:', bgp_info['communities'])",
        "most_similar_instructions": {
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.2992125984251969,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.28346456692913385,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.21333333333333335,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.1875,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.1732283464566929,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.16216216216216214,
            "Visualize the BGP update timeline for the prefix 101.101.101.0/24 during the time window from May 8, 2019, 14:00:00 UTC, to May 8, 2019, 16:00:00 UTC. Use data from multiple RouteViews collectors, including rrc00, route-views1.saopaulo, and route-views2.saopaulo. Collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.15267175572519082,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.14893617021276595,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.14814814814814817,
            "Collect BGP announcement data for AS39523 from multiple RouteViews collectors for the time window between December 12, 2017, 04:00:00 and December 12, 2017, 08:00:00. Analyze the data to identify and report announcement spikes, which are defined as the number of announcements exceeding twice the mean count per 5-minute intervals. Print a summary of the announcement spikes including the timestamp and the number of announcements.": 0.14400000000000002
        },
        "avg_similarity_score": 0.1399021103272287
    },
    {
        "instruction": "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).",
        "input": "Time window: February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC\nCollectors: route-views2, route-views4\nRecord Type: ribs\nPeer ASN: 7018",
        "output": "import pybgpstream\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2021-02-13 10:00:00 UTC\"\nend_time = \"2021-02-13 12:59:59 UTC\"\n\n# Initialize BGPStream with an expanded list of collectors\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\", \"route-views4\"],\n    record_type=\"ribs\"\n)\n\n# Store count of collected MOAS prefixes\nmoas_prefixes = set()\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            if elem.peer_asn == 7018:\n                moas_prefix = elem.fields[\"prefix\"]\n                moas_prefixes.add(moas_prefix)\n\n# Analyzing the MOAS (Multiple Origin AS) prefixes propagated by AS7018 \nprint('Total Number of MOAS Prefixes Collected:', len(moas_prefixes))",
        "most_similar_instructions": {
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.4666666666666667,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.43333333333333335,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.39999999999999997,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.3636363636363636,
            "Visualize the BGP update timeline for the prefix 101.101.101.0/24 during the time window from May 8, 2019, 14:00:00 UTC, to May 8, 2019, 16:00:00 UTC. Use data from multiple RouteViews collectors, including rrc00, route-views1.saopaulo, and route-views2.saopaulo. Collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.3064516129032258,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.30158730158730157,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.18333333333333332,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.18181818181818182,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.1782178217821782
        },
        "avg_similarity_score": 0.18521263994559278
    },
    {
        "instruction": "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).",
        "input": "Time window: February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC\nCollectors: route-views2, route-views3, route-views4\nRecord Type: updates\nSource ASN: 13273\nDestination ASN: 28715",
        "output": "import pybgpstream\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2021-02-14 06:00:00 UTC\"\nend_time = \"2021-02-14 11:59:59 UTC\"\n\n# Initialize BGPStream with an expanded list of collectors\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\"],\n    record_type=\"updates\"\n)\n\n# Store counts of AS path length in a dictionary \nas_path_length = {\n    '13273': {}, \n    '28715': {}\n}\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            if (elem.peer_asn == 13273 and elem.fields[\"as-path\"].split()[-1] == \"28715\") or (elem.peer_asn == 28715 and elem.fields[\"as-path\"].split()[0] == \"13273\"):\n                as_path = elem.fields[\"as-path\"].split()\n                as_path_length[str(elem.peer_asn)][elem.fields[\"prefix\"]] = len(as_path)\n\n# Calculate the AS path inflation\nAS13273_count = len(as_path_length['13273'])\nAS28715_count = len(as_path_length['28715'])\nAS13273_total_length = sum(as_path_length['13273'].values())\nAS28715_total_length = sum(as_path_length['28715'].values())\nprint('AS13273 Mean AS Path Length:', AS13273_total_length / AS13273_count)\nprint('AS28715 Mean AS Path Length:', AS28715_total_length / AS28715_count)",
        "most_similar_instructions": {
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.625,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.423728813559322,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.4077669902912622,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.4067796610169492,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.35294117647058826,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.32258064516129026,
            "Visualize the BGP update timeline for the prefix 101.101.101.0/24 during the time window from May 8, 2019, 14:00:00 UTC, to May 8, 2019, 16:00:00 UTC. Use data from multiple RouteViews collectors, including rrc00, route-views1.saopaulo, and route-views2.saopaulo. Collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.3114754098360656,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.18644067796610167,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.18181818181818182,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.1818181818181818
        },
        "avg_similarity_score": 0.19814373666054907
    },
    {
        "instruction": "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.",
        "input": "Time window: February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC\nCollector: route-views2\nRecord Type: updates",
        "output": "import pybgpstream\nimport pandas as pd\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2021-02-15 09:00:00 UTC\"\nend_time = \"2021-02-15 13:59:59 UTC\"\n\n# Initialize BGPStream with a filter to collect information from route-views2\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\"],\n    record_type=\"updates\"\n)\n\n# Access and store live information in a pandas dataframe\ndf = pd.DataFrame()\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            df = df.append(\n                {\n                    \"prefix\": elem.fields[\"prefix\"], \n                    \"time\": rec.time,\n                    \"peer_asn\": elem.peer_asn, \n                    \"as_path\": elem.fields[\"as-path\"],\n                    \"origin\": elem.fields[\"origin\"],\n                    \"local_preference\": elem.fields[\"local-pref\"],\n                    \"med\": elem.fields[\"med\"],\n                    \"communities\": elem.fields[\"communities\"]\n                }, \n                ignore_index=True\n            )\n\n# Access live stream data\nprint(df)",
        "most_similar_instructions": {
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.4090909090909091,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.37777777777777777,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.3711340206185567,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.26785714285714285,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.25,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.2352941176470588,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.23214285714285715,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.21505376344086025,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.19047619047619044
        },
        "avg_similarity_score": 0.18161480495639062
    },
    {
        "instruction": "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.",
        "input": "Time window: February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC\nCollectors: route-views.eqix\nRecord Type: updates\nOrigin: MOAS",
        "output": "import pybgpstream\n\n# Define the time window around the incident\nstart_time = \"2021-02-11 00:00:00 UTC\"\nend_time = \"2021-02-11 05:59:59 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=\"route-views.eqix\",\n    record_type=\"updates\"\n)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.origin_as != \"<noinput>\":\n            if elem.origin in 'moas':\n                #Analyze the effect of MOAS prefixes on overall BGP network stability\n                #Your code to analyze BGP network stability",
        "most_similar_instructions": {
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.4666666666666667,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.4666666666666667,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.42857142857142855,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.3619047619047619,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.3333333333333333,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.31111111111111117,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.2644628099173553,
            "Visualize the BGP update timeline for the prefix 101.101.101.0/24 during the time window from May 8, 2019, 14:00:00 UTC, to May 8, 2019, 16:00:00 UTC. Use data from multiple RouteViews collectors, including rrc00, route-views1.saopaulo, and route-views2.saopaulo. Collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.24193548387096772,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.23809523809523808,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.23404255319148937
        },
        "avg_similarity_score": 0.1954799643794661
    },
    {
        "instruction": "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.",
        "input": "Time window: February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC\nCollectors: all the route-views collectors\nRecord Type: updates\nASN: 65530",
        "output": "import pybgpstream\nfrom collections import defaultdict\n\n# Define the time window\nstart_time = \"2021-02-11 00:00:00 UTC\"\nend_time = \"2021-02-11 05:59:59 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=\"route-views\",\n    record_type=\"updates\"\n)\n\n# Store the counts of BGP communities\nbgp_comm_count = defaultdict(int)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.fields['as-path'].split()[-1] == \"65530\":\n            bgp_comm = elem.fields['communities']\n            if bgp_comm:\n                bgp_comm_count[bgp_comm] += 1\n\n# Computing distribution of BGP communities for ASN 65530\ncomm_distribution = {}\ntotal = sum(bgp_comm_count.values())\nfor comm in bgp_comm_count:\n    comm_distribution[comm] = bgp_comm_count[comm]/total\n\n# Studying BGP communities\n#Your code to study BGP communities",
        "most_similar_instructions": {
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.54,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.47540983606557374,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.47540983606557374,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.39252336448598135,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.38,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.32653061224489793,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.3252032520325203,
            "Visualize the BGP update timeline for the prefix 101.101.101.0/24 during the time window from May 8, 2019, 14:00:00 UTC, to May 8, 2019, 16:00:00 UTC. Use data from multiple RouteViews collectors, including rrc00, route-views1.saopaulo, and route-views2.saopaulo. Collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.3174603174603175,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.31249999999999994,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.30434782608695654
        },
        "avg_similarity_score": 0.24317613820430778
    },
    {
        "instruction": "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.",
        "input": "Time window: April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC\nCollectors: rrc00\nRecord Type: updates (Announcement)",
        "output": "import pybgpstream\n\n# Define the time window around the incident\nstart_time = \"2020-04-01 00:00:00 UTC\"\nend_time = \"2020-04-01 05:59:59 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=\"rrc00\",\n    record_type=\"updates\"\n)\n\n# Access live data sources\n#Your code to access live data sources",
        "most_similar_instructions": {
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.37837837837837834,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.3170731707317074,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.30952380952380953,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.29999999999999993,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.29268292682926833,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.28846153846153844,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.28846153846153844,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.2545454545454546,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.23529411764705882,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.23076923076923075
        },
        "avg_similarity_score": 0.20422667992842397
    },
    {
        "instruction": "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.",
        "input": "Time window: April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC\nCollectors: route-views, bgp.he.net, route-views.eqix\nRecord Type: updates\nPrefix: 22.83.164.0/22\nSource ASN: 52657",
        "output": "import pybgpstream\nfrom collections import Counter\n\n# Define the time window around the incident\nstart_time = \"2020-04-01 00:00:00 UTC\"\nend_time = \"2020-04-01 05:59:59 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views\", \"bgp.he.net\", \"route-views.eqix\"],\n    record_type=\"updates\"\n)\n\n# Measure AS path inflation on prefix 22.83.164.0/22\npath_lengths = Counter()\nfor rec in stream.records():\n    for elem in rec:\n        if elem.fields['prefix'] == \"22.83.164.0/22\":\n            as_path = elem.fields['as-path'].split()\n            if as_path[0] == \"52657\":\n                path_lengths[elem.type] += len(as_path)\n\n# Analyze the path inflation\n#Your code to analyze the path inflation",
        "most_similar_instructions": {
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.4367816091954023,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.36190476190476195,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.33009708737864074,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.272,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.256,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.25263157894736843,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.24528301886792453,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.24,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.2376237623762376,
            "Collect BGP update data from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Focus on AS23724 and analyze the number of BGP announcements made by AS23724 on an hourly basis during that time period. Additionally, identify the top 10 most common AS paths announced by AS23724 on April 8, 2010, and visualize them.": 0.23333333333333334
        },
        "avg_similarity_score": 0.1989530567309856
    },
    {
        "instruction": "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.",
        "input": "Time window: April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC\nCollectors: all route-views collectors\nRecord Type: updates\nASN: 13414",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-04-18 00:00:00 UTC\"\nend_time = \"2020-04-18 05:59:59 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=\"route-views\",\n    record_type=\"updates\"\n)\n\n# Separate BGP announcements into valid and invalid\nvalid_prefix_updates = []\ninvalid_prefix_updates = []\nfor rec in stream.records():\n    for elem in rec:\n        if elem.fields['as-path'].split()[-1] == \"13414\":\n            if elem.is_valid_announcement():\n                valid_prefix_updates.append(elem.fields['prefix'])\n            else:\n                invalid_prefix_updates.append(elem.fields['prefix'])\n\n# Listen live to any subsequent announcements\n#Your code to listen to live announcements",
        "most_similar_instructions": {
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.5940594059405941,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.4444444444444445,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.40384615384615385,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.38016528925619836,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.38016528925619836,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.3614457831325301,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.3232323232323232,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.30927835051546393,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.30188679245283023,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.29508196721311475
        },
        "avg_similarity_score": 0.2385518027891673
    },
    {
        "instruction": "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.",
        "input": "Time window: April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC\nCollectors: bgp.as6453.net, route-views.eqix\nRecord Type: updates (Withdrawal)",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-04-21 00:00:00 UTC\"\nend_time = \"2020-04-21 05:59:59 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"bgp.as6453.net\", \"route-views.eqix\"],\n    record_type=\"updates\"\n)\n\n# Access live data sources\n#Your code to access live data sources",
        "most_similar_instructions": {
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.5306122448979591,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.5194805194805195,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.4042553191489362,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.3764705882352941,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.3440860215053763,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.3368421052631579,
            "Visualize the top 10 ASNs with the most accepted leaked prefixes during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the bar chart to show the number of accepted leaked prefixes for each ASN.": 0.2608695652173913,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.24999999999999994,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.24719101123595505,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.2434782608695652
        },
        "avg_similarity_score": 0.22190744406456483
    },
    {
        "instruction": "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.",
        "input": "Time window: 2020-01-15 16:00:00 UTC,\nCollector: rrc05\nRecord Type: updates\nPrefix of Interest: 192.168.0.0/16",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-01-15 16:00:00\"\nend_time = <noinput>\n\ntarget_prefix = \"192.168.0.0/16\"\n\n# Initialize BGPStream with the specified collector\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"rrc05\"],\n    record_type=\"updates\"\n)\n\n# Track other ASes and the lengths of their AS Paths\nas_paths = {}\n\n# Process BGP records\nfor rec in stream:\n    for elem in rec:\n        if elem.type == \"A\" and elem.fields[\"prefix\"] == target_prefix:\n            as_path = elem.fields[\"as-path\"].split()\n            asn = as_path[-1]\n            if asn in as_paths:\n                as_paths[asn] = max(as_paths[asn], len(as_path))\n            else:\n                as_paths[asn] = len(as_path)\n\naverage_as_path_length = 0\nfor asn, as_path_length in as_paths.values():\n    average_as_path_length += as_path_length\n\naverage_as_path_length /= len(as_paths)\n\nprint(\"The average AS path length for prefix 192.168.0.0/16 over the specified timeframe is %f ASes.\" %average_AS_path_length)",
        "most_similar_instructions": {
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.28888888888888886,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.275,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.2716049382716049,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.2558139534883721,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.24324324324324326,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.23529411764705882,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.2298850574712644,
            "Collect BGP announcement data for AS39523 from multiple RouteViews collectors for the time window between December 12, 2017, 04:00:00 and December 12, 2017, 08:00:00. Analyze the data to identify and report announcement spikes, which are defined as the number of announcements exceeding twice the mean count per 5-minute intervals. Print a summary of the announcement spikes including the timestamp and the number of announcements.": 0.22857142857142854,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.2272727272727273,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.22680412371134023
        },
        "avg_similarity_score": 0.19665845044416264
    },
    {
        "instruction": "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.",
        "input": "Time window: 2020-03-20 16:00:00 UTC to 2020-03-20 17:00:00 UTC\nCollector: routeviews2 \nRecord Type: updates",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-03-20 16:00:00\"\nend_time = \"2020-03-20 17:00:00\"\n\n# Initialize BGPStream with the specified collector\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"routeviews2\"],\n    record_type=\"updates\"\n)\n\n# Track prefixes and their ASes\nprefix_ases = {}\n\n# Process BGP records\nfor rec in stream:\n    for elem in rec:\n        if elem.type == \"A\":\n            prefix = elem.fields[\"prefix\"]\n            as_path = elem.fields[\"as-path\"].split()\n            # Check if MOAS\n            if len(as_path) > 1:\n                # Store in prefixes map\n                if prefix in prefix_ases:\n                    prefix_ases[prefix].add(as_path[-1])\n                else:\n                    prefix_ases[prefix] = set([as_path[-1]])\n\n# Count MOAS prefixes\nmoas_prefixes_count = 0\nfor prefix, ases in prefix_ases.items():\n    if len(ases) > 1:\n        moas_prefixes_count += 1\n\nprint(\"Number of MOAS prefixes during the specified timeframe: %d.\" %moas_prefixes_count)",
        "most_similar_instructions": {
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.5,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.2777777777777778,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.24657534246575344,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.24444444444444446,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.23376623376623376,
            "Collect BGP update data for April 25, 2018, to April 26, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS10297 (eNet) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.22857142857142854,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.225,
            "Collect BGP update data for July 29, 2018, to July 31, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS58224 (Iran Telecommunication Company) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.2222222222222222,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.21951219512195122,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.21686746987951808
        },
        "avg_similarity_score": 0.18992702078275242
    },
    {
        "instruction": "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.",
        "input": "Time window: 2020-04-03 14:00:00 UTC to 2020-04-03 15:00:00 UTC\nCollector: routeviews, ripe\nRecord Type: updates",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-04-03 14:00:00\"\nend_time = \"2020-04-03 15:00:00\"\n\n# Initialize BGPStream with multiple collectors\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"routeviews\", \"ripe\"],\n    record_type=\"updates\"\n)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        # Do something with the collected BGP records\n        <noinput>",
        "most_similar_instructions": {
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.3934426229508197,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.3376623376623376,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.30303030303030304,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.28985507246376807,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.2702702702702703,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.2564102564102564,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.2545454545454546,
            "Visualize the BGP update timeline for the specified prefixes during the time window from June 6, 2019, 09:00:00 UTC, to June 6, 2019, 12:00:00 UTC. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, and ris-ripe. Collect BGP update records of type 'A' (Announcements) for these prefixes. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.2285714285714286,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.2222222222222222,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.2181818181818182
        },
        "avg_similarity_score": 0.1891724148350693
    },
    {
        "instruction": "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.",
        "input": "Time window: 2020-06-12 16:00:00 UTC to 2020-06-12 17:00:00 UTC\nCollector: rrc13\nRecord Type: updates",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-06-12 16:00:00\"\nend_time = \"2020-06-12 17:00:00\"\n\n# Initialize BGPStream with the specified collector\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"rrc13\"],\n    record_type=\"updates\"\n)\n\n# Track prefixes and their communities\nprefix_communities = {}\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            prefix = elem.fields[\"prefix\"]\n            # Store community in prefixes map\n            if prefix in prefix_communities:\n                prefix_communities[prefix].add(elem.fields[\"communities\"])\n            else:\n                prefix_communities[prefix] = set([elem.fields[\"communities\"]])\n\n# Show statistics\nprint(\"Number of prefixes in the specified timeframe: %d.\" %len(prefix_communities))\nprint(\"Number of distinct communities associated with these prefixes: %d.\" %len(set.union(*prefix_communities.values())))",
        "most_similar_instructions": {
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.4137931034482759,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.4126984126984127,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.2727272727272727,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.24324324324324326,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.23255813953488372,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.22222222222222224,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.21739130434782605,
            "Collect BGP announcement data for AS12389 from multiple RouteViews collectors for the time window between April 26, 2017, 22:00:00 and April 26, 2017, 23:00:00. Identify and report anomalies in BGP announcements for AS12389, specifically if the number of announcements exceeds a threshold of 1000 per minute. Additionally, provide a list of the top 5 prefixes originated by AS12389 during this time window.": 0.20833333333333331,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.20588235294117646,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.2040816326530612
        },
        "avg_similarity_score": 0.17243333772335906
    },
    {
        "instruction": "Collect MOAS (Multi Origin ASes) prefixes over the last week, perform topological analysis and visualize migration patterns.",
        "input": "Time window: Last week\nProjects: route-views",
        "output": "import pybgpstream\nimport networkx as nx\nfrom datetime import datetime, timedelta\n\n# Define the time window around the incident\nend_time = datetime.utcnow().strftime('%Y-%m-%d 00:00:00') # Current time\nstart_time = (datetime.utcnow() - timedelta(days=7)).strftime('%Y-%m-%d 23:59:59') # Last week\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    projects=[\"route-views\"],\n    record_type=\"moas\"\n)\n\n# Create a Networkx graph\nG = nx.Graph()\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        src_asn = elem.fields[\"as-path\"].split(' ')[-1] # Source ASN\n        origin_asn = elem.fields[\"as-path\"].split(' ')[0] # Origin ASN\n        if src_asn != origin_asn: # Ignore if Source ASN is same as Origin ASN\n            if not G.has_edge(src_asn, origin_asn): # Check if edge exists already\n                G.add_edge(src_asn, origin_asn)\n\n# Visualize the graph\nplt.figure(figsize=(10, 6))\npos = nx.spring_layout(G, k=4.)\nnx.draw(G, pos, with_labels=True, font_size=14, font_color=\"green\", node_color=\"blue\", node_size=500, arrowsize=20, width=0.5)\nplt.title(\"MOAS Prefixes Topology Analysis - Last Week\")\nplt.tight_layout()\nplt.show()",
        "most_similar_instructions": {
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.17777777777777778,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.15789473684210528,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.15151515151515152,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.14545454545454545,
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.13793103448275862,
            "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.": 0.12765957446808512,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.12121212121212122,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.11594202898550726,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.11320754716981131,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.1111111111111111
        },
        "avg_similarity_score": 0.09091441519217444
    },
    {
        "instruction": "Determine the relation between ASN 65501 and ASN 65500 by checking the length of BGP paths between them over the past month.",
        "input": "Time window: Last month\nProjects: route-views\nASN of interest: 65501 and 65500",
        "output": "import pybgpstream\nimport matplotlib.pyplot as plt\nfrom datetime import datetime, timedelta\n\n# Define the time window around the incident\nend_time = datetime.utcnow().strftime('%Y-%m-%d 00:00:00') # Current time\nstart_time = (datetime.utcnow() - timedelta(days=30)).strftime('%Y-%m-%d 23:59:59') # Last month\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    projects=[\"route-views\"],\n    record_type=\"updates\"\n)\n\n# Dictionary to store the length of paths \n# Key is timestamp and value is path length\npath_lengths = {}\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.fields[\"peer-asn\"] == 65501 or elem.fields[\"peer-asn\"] == 65500: # Check for consistent peer ASNs\n            path_length = len(elem.fields['as-path'].split(' ')) # Path length\n            timestamp_hour = datetime.utcfromtimestamp(elem.time).strftime('%Y-%m-%d %H:00:00') # Timestamp\n            if timestamp_hour not in path_lengths:\n                path_lengths[timestamp_hour] = 0\n            path_lengths[timestamp_hour] += path_length\n\n# Visualize the length of paths\ntimestamps = sorted(path_lengths.keys())\nlengths = [path_lengths[ts] for ts in timestamps]\n\nplt.figure(figsize=(15, 7))\nplt.plot(timestamps, lengths, marker='o', color='red', linestyle='-')\nplt.xlabel('Timestamp (Hourly)')\nplt.ylabel('Length of Paths between ASN 65501 and ASN 65500')\nplt.title('Length of BGP Paths between ASN 65501 and ASN 65500 - Last Month')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Collect BGP update data from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Focus on AS23724 and analyze the number of BGP announcements made by AS23724 on an hourly basis during that time period. Additionally, identify the top 10 most common AS paths announced by AS23724 on April 8, 2010, and visualize them.": 0.18181818181818182,
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.1764705882352941,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.1724137931034483,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.1686746987951807,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.16666666666666666,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.1643835616438356,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.16216216216216214,
            "Collect BGP announcement data for AS23724 from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Analyze and plot the number of BGP announcements per hour for AS23724 during this time frame. Additionally, provide the total number of announcements for AS23724, the hour with the maximum announcements, and the top 5 most common AS paths announced by AS23724. Save the results in a text document.": 0.16161616161616163,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.16
        },
        "avg_similarity_score": 0.1275582301184602
    },
    {
        "instruction": "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.",
        "input": "Collector: rrc00\nProject: route-views\nASN of interest: 65501\nFilter: path \"_65501_\"",
        "output": "import pybgpstream\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    collector=\"rrc00\",\n    projects=[\"route-views\"],\n    record_type=\"updates\",\n    filter=\"path _65501_\"\n)\n\n# Dictionary to store the count of AS Path Inflation of Carefit ASN 65501\ninflation_counts = {}\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        path_length = len(elem.fields['as-path'].split(' ')) # Path length\n       as_path_str = ' '.join(elem.fields['as-path'].split(' ')) # AS Path string\n        if path_length >= 5 and as_path_str.endswith(\"65501\"): # Inflated paths should be longer than 5 ASN and should end with Carefit ASN 65501\n            if path_length not in inflation_counts:\n                inflation_counts[path_length] = 0\n            inflation_counts[path_length] += 1\n\n# Visualize the number of inflation paths\npath_lengths = sorted(inflation_counts.keys())\ninflation_count = [inflation_counts[x] for x in path_lengths]\n\nplt.figure(figsize=(12, 6))\nplt.bar(path_lengths, inflation_count)\nplt.xlabel('Length of the Path (AS Chains)')\nplt.ylabel('Count of Inflated Paths')\nplt.title('AS Path Inflation Analysis of Carefit ASN 65501')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.3703703703703704,
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.33333333333333337,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.30769230769230765,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.27450980392156865,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.27118644067796616,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.2608695652173913,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.25,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.23529411764705885,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.22580645161290322,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.21621621621621623
        },
        "avg_similarity_score": 0.1811173247557824
    },
    {
        "instruction": "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.",
        "input": "Time window: January 5, 2017, 00:00:00 to January 5, 2017, 23:59:59\nCollectors: route-views2",
        "output": "import pybgpstream\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2017-01-05 00:00:00\"\nend_time = \"2017-01-05 23:59:59\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\"],\n    record_type=\"ribs\"\n)\n\n# Process the BGP records\npeer_routes = defaultdict(list)\nfor rec in stream.records():\n    for elem in rec:\n if elem.type == \"R\":  # Check for BGP RIB entries\n    peer_ip = elem.peer_address\n    route_pref = elem.fields['med']\n    peer_routes[peer_ip].append(route_pref)\n\n# Create a DataFrame\ndf = pd.DataFrame(list(peer_routes.items()), columns=('peer_ip', 'route_prefs'))\n\n# Visualize the route-preference between all the peers\nlabels = df['peer_ip'].tolist()\ndata = df['route_prefs'].tolist()\n\nplt.figure(figsize=(8, 5))\nplt.boxplot(data, labels=labels, showmeans=True, patch_artist=True)\nplt.title(\"Route-Preference Between RouteViews peers\")\nplt.xlabel(\"Peer IP address\")\nplt.ylabel(\"Route Preference (MED)\")\nplt.xticks(rotation=90, ha='right')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.2692307692307692,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.2631578947368421,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.2380952380952381,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.23188405797101452,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.2278481012658228,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.22580645161290325,
            "Collect BGP announcement data for AS39523 from multiple RouteViews collectors for the time window between December 12, 2017, 04:00:00 and December 12, 2017, 08:00:00. Analyze the data to identify and report announcement spikes, which are defined as the number of announcements exceeding twice the mean count per 5-minute intervals. Print a summary of the announcement spikes including the timestamp and the number of announcements.": 0.21505376344086022,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.21333333333333332,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.21176470588235297
        },
        "avg_similarity_score": 0.1800436463524766
    },
    {
        "instruction": "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.",
        "input": "Time window: January 5, 2017, 00:00:00 to January 5, 2017, 23:59:59\nCollectors: route-views2, kdl",
        "output": "import pybgpstream\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom collections import defaultdict\n\n# Define the time window around the incident\nstart_time = \"2017-01-05 00:00:00\"\nend_time = \"2017-01-05 23:59:59\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\", \"kdl\"],\n    record_type=\"updates\",\n    filter=\"type mpm\",\n    )\n\n# Dictionary to store the longest AS paths\nlongest_paths = defaultdict(int)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n if elem.type == \"A\":  # Check for BGP announcements\n  as_path_length = len(elem.fields[\"as-path\"].split(' '))\n  longest_paths[elem.fields[\"as-path\"]] = as_path_length\n\n# Print the top 10 longest AS paths\nprint(\"Top 10 Longest AS Paths:\")\nfor i, (as_path, path_length) in enumerate(sorted(longest_paths.items(), key=lambda x: x[1], reverse=True)[:10], start=1):\n    print(f\"{i}. {as_path}: {path_length} ASNs\")\n\n# Visualize the top 10 longest AS paths\nlabels = list()\ndata = list()\nfor as_path, path_length in sorted(longest_paths.items(), key=lambda x: x[1], reverse=True)[:10]:\n    labels.append(as_path)\n    data.append(path_length)\n\nplt.figure(figsize=(12, 6))\nplt.bar(labels, data, color='green')\nplt.title('Top 10 Longest AS Paths')\nplt.xlabel('AS Path')\nplt.ylabel('Number of ASes')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()",
        "most_similar_instructions": {
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.2962962962962962,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.2745098039215686,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.2716049382716049,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.2716049382716049,
            "Collect MOAS (Multi Origin ASes) prefixes over the last week, perform topological analysis and visualize migration patterns.": 0.24489795918367344,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.23333333333333334,
            "Identify the top 10 AS paths with the highest number of transits of IPv4 prefixes originated from AS 111 ayde-11.": 0.22641509433962265,
            "Collect BGP update data from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Focus on AS23724 and analyze the number of BGP announcements made by AS23724 on an hourly basis during that time period. Additionally, identify the top 10 most common AS paths announced by AS23724 on April 8, 2010, and visualize them.": 0.22448979591836735,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.21686746987951808,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.21505376344086022
        },
        "avg_similarity_score": 0.17925944728298057
    },
    {
        "instruction": "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.",
        "input": "Time window: January 5, 2017, 00:00:00 to January 5, 2017, 23:59:59\nCollectors: route-views2",
        "output": "import pybgpstream\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2017-01-05 00:00:00\"\nend_time = \"2017-01-05 23:59:59\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\"],\n    record_type=\"updates\",\n    )\n\n# Dictionary to store the BGP community per view\nbgp_comm_per_view = defaultdict(int)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n   if elem.type == \"A\":  # Check for BGP updates\n  view_name = elem.fields['view-name']\n  bgp_comm_str = elem.fields['bgp-community']\n  bgp_comm_list = bgp_comm_str.split(':')\n  bgp_comm_len = len(bgp_comm_list)\n  bgp_comm_per_view[view_name] += bgp_comm_len\n\n# Visualize the BGP communities per view\nview_names = sorted(bgp_comm_per_view.keys())\ncounts = [bgp_comm_per_view[view_name] for view_name in view_names]\n\nplt.figure(figsize=(8, 5))\nplt.bar(view_names, counts, color='#ffe0b2')\nplt.title('BGP Communities per View')\nplt.xlabel('View Name')\nplt.ylabel('Number of BGP Communities')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.4878048780487805,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.4680851063829787,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.35714285714285715,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.32142857142857145,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.31818181818181823,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.3125,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.31111111111111117,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.2686567164179105,
            "Collect BGP update data for April 26, 2017, from multiple RouteViews collectors. Calculate and visualize the trends in BGP announcements by AS12389 per minute. Identify the prefixes originated by AS12389. Detect anomalies by setting a threshold and reporting any minute with an announcement count exceeding the threshold as an anomaly.": 0.2465753424657534,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.22222222222222224
        },
        "avg_similarity_score": 0.2019363179068623
    },
    {
        "instruction": "Monitor the network connections from RouteViews2 in order to measure AS path inflation in the given time window. Calculate and visualize the AS Path length distribution.",
        "input": "Time window: January 5, 2017, 00:00:00 to January 5, 2017, 23:59:59\nCollectors: route-views2",
        "output": "import pybgpstream\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2017-01-05 00:00:00\"\nend_time = \"2017-01-05 23:59:59\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\"],\n    record_type=\"updates\",\n    )\n\n# Dictionary to store the AS path lengths\nas_path_lengths = defaultdict(int)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n if elem.type == \"A\":  # Check for BGP updates\n  as_path_length = len(elem.fields[\"as-path\"].split(' '))\n  as_path_lengths[as_path_length] += 1\n\n# Visualize the AS Path length distribution\npath_lengths = sorted(as_path_lengths.keys())\ncounts = [as_path_lengths[path_len] for path_len in path_lengths]\n \nplt.figure(figsize=(8, 5))\nplt.bar(path_lengths, counts, color='#ffffbb')\nplt.title('AS Path Length Distribution')\nplt.xlabel('Path Length')\nplt.ylabel('Number of Paths')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.": 0.3793103448275862,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.28571428571428575,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.27999999999999997,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.27272727272727276,
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.2631578947368421,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.25,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.22580645161290322,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.2222222222222222,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.21333333333333332,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.1851851851851852
        },
        "avg_similarity_score": 0.16448492959461003
    },
    {
        "instruction": "Use the MOAS (Multiple Origin AS) prefixes to measure the AS path inflation from November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.",
        "input": "Time Window: November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.\nCollectors: route-views.sg, route-views.eqix\nRecord Type: updates\nMOAS Prefix(es): 192.0.2.0/24",
        "output": "import pybgpstream\nfrom collections import defaultdict\n\n# Define the time window\nstart_time = \"2020-11-30 00:00:00 UTC\"\nend_time = \"2020-11-30 05:59:59 UTC\"\n\n# Initialize BGPStream with an expanded list of collectors\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views.sg\", \"route-views.eqix\"],\n    record_type=\"updates\"\n)\n\n# Store list of AS paths\nas_paths = defaultdict(list)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            as_path = elem.fields[\"as-path\"].split()\n            prefix = elem.fields[\"prefix\"]\n            if prefix == \"192.0.2.0/24\":\n                # Store advertising ASN and the AS path\n                advertising_asn = as_path[0]\n                as_paths[advertising_asn].append(as_path)\n\n# Calculate path inflation from - to originating ASN\ninflation_counts = defaultdict(list)\nfor orig_asn, as_path_list in as_paths.items():\n    for as_path in as_path_list:\n        inflation_count = len(as_path) - 1\n        inflation_counts[orig_asn].append(inflation_count)\n\n# Calculate the average path inflation per origin ASN\ninflation_averages = {asn:sum(counts)/len(counts) for asn, counts in inflation_counts.items()}\n\n# Extract ASN and their inflation values for plotting\nasns, inflation_values = zip(*inflation_averages.items())\n\n# Visualizing AS path inflation\nplt.figure(figsize=(14, 6))\nplt.bar(asns, inflation_values)\nplt.xlabel('Advertising ASNs')\nplt.ylabel('Average AS Path Inflation')\nplt.title('Average AS Path Inflation (MOAS 192.0.2.0/24)')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.43589743589743585,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.41935483870967744,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.38554216867469876,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.3835616438356164,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.3333333333333333,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.3291139240506329,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.3,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.2894736842105263,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.28070175438596495,
            "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.": 0.26229508196721313
        },
        "avg_similarity_score": 0.1844876346809619
    },
    {
        "instruction": "Access live stream data sources to study the AS communities from October 10, 2020, 15:00:00 UTC, until October 10, 2020, 16:00:00 UTC.",
        "input": "Time Window: October 10, 2020, 15:00:00 UTC, until October 10, 2020, 16:00:00 UTC.\nCollectors: route-views.sg, route-views.eqix\nRecord Type: ribs",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2020-10-10 15:00:00 UTC\"\nend_time = \"2020-10-10 16:00:00 UTC\"\n\n# Initialize BGPStream with an expanded list of collectors\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views.sg\", \"route-views.eqix\"],\n    record_type=\"ribs\"\n)\n\n# Store AS communities\nas_communities = defaultdict(list)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec.elements:\n        # Store the AS number and the community\n        as_num = elem.fields.get('as-path').split()[-1]\n        as_comm = elem.fields.get('communities')\n        as_communities[as_num].append(as_comm)\n\n# Count the number of unique communities for each AS\nunique_communities = {asn: len(set(comms)) for asn, comms in as_communities.items()}\n\n# Extract ASN and their counts\nasns, counts = zip(*unique_communities.items())\n\n# Visualizing the community count\nplt.figure(figsize=(14, 6))\nplt.bar(asns, counts)\nplt.xlabel('ASN')\nplt.ylabel('Number of Unique Communities')\nplt.title('Number of Unique Communities per ASN')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.4067796610169492,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.4067796610169492,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.37142857142857144,
            "Use the MOAS (Multiple Origin AS) prefixes to measure the AS path inflation from November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.": 0.3636363636363637,
            "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.": 0.3571428571428571,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.33333333333333337,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.32653061224489793,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.2985074626865672,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.2592592592592593,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.2272727272727273
        },
        "avg_similarity_score": 0.17183936699291993
    },
    {
        "instruction": "Analyze the time-series data of the BGP updates received between September 10, 2020, 03:00:00 UTC, to September 10, 2020, 06:00:00 UTC, generated from the route-views.amsix collector.",
        "input": "Time Window: September 10, 2020, 03:00:00 UTC, until September 10, 2020, 06:00:00 UTC\nCollectors: route-views.amsix\nRecord Type: updates",
        "output": "import pybgpstream\nfrom collections import defaultdict\n\n# Define the time window\nstart_time = \"2020-09-10 03:00:00 UTC\"\nend_time = \"2020-09-10 06:00:00 UTC\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views.amsix\"],\n    record_type=\"updates\"\n)\n\n# Store counts of updates\nupdate_counts = defaultdict(list)\n\n# Process BGP records\nfor rec in stream.records():\n    # Increment update count \n    time_epoch = int(rec.time)\n    time_minute = (time_epoch // 60)*60\n    update_counts[time_minute] += 1\n\n# Extract timestamp and counts\ntimestamps, counts = zip(*update_counts.items())\n\n# Visualizing time series\nplt.figure(figsize=(14, 6))\nplt.plot(timestamps, counts)\nplt.xlabel('Epoch Time in Minutes')\nplt.ylabel('Number of BGP updates')\nplt.title('Number of BGP updates Received per Minute')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.grid(True, which='both', linestyle='--', linewidth=0.5)\nplt.show()",
        "most_similar_instructions": {
            "Access live stream data sources to study the AS communities from October 10, 2020, 15:00:00 UTC, until October 10, 2020, 16:00:00 UTC.": 0.4067796610169492,
            "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.": 0.3492063492063492,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.3333333333333333,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.3170731707317074,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.3132530120481928,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.3116883116883117,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.30303030303030304,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.2950819672131148,
            "Use the MOAS (Multiple Origin AS) prefixes to measure the AS path inflation from November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.": 0.2903225806451613,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.2857142857142857
        },
        "avg_similarity_score": 0.18914476176964903
    },
    {
        "instruction": "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.",
        "input": "Time window: July 8th, 2019, 11:00-11:05 AM\nCollector: ris-bog\nRecord Type: ribs\nIP Version: 4\nPrefix: 8.7.0.0/16",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2019-07-08 11:00:00\"\nend_time = \"2019-07-08 11:05:00\"\n\n# Initialize BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time, \n    until_time=end_time,\n    collectors=[\"ris-bog\"],\n    record_type='ribs',\n    filter='prefix 8.7.0.0/16 and ipversion 4'\n)\n\n# Query the results\n... (rest of the code)\n\n# Get a count of the unique ASes\nunique_ases = set()\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == 'A': # Look for BGP announcements\n             as_path = elem.fields['as-path'].split()\n             origin_as = as_path[-1]\n             unique_ases.add(origin_as)\n\nprint(\"Number of ASN originating prefix: {}\".format(len(unique_ases)))",
        "most_similar_instructions": {
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.25974025974025977,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.23655913978494625,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.22916666666666669,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between February 24, 2008, 18:00:00 and February 24, 2008, 22:00:00. Identify unauthorized BGP announcements for the prefix 208.65.153.0/24 and list the ASes responsible for these announcements. If unauthorized announcements are detected, print the list of ASes; otherwise, indicate that no unauthorized announcements were found.": 0.22857142857142856,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.21875,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.21739130434782608,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 00:00:00 on January 22, 2006, and 00:00:00 on January 23, 2006. Analyze BGP announcements by Con Edison (AS27506) and create two plots: 1) a bar chart showing the number of announcements for each prefix, and 2) a scatter plot showing the timestamps of announcements for the top 10 prefixes with the highest number of announcements. The timestamps should be in UTC format.": 0.21666666666666667,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.21538461538461542,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.20289855072463767,
            "Collect BGP announcement data for AS39523 from multiple RouteViews collectors for the time window between December 12, 2017, 04:00:00 and December 12, 2017, 08:00:00. Analyze the data to identify and report announcement spikes, which are defined as the number of announcements exceeding twice the mean count per 5-minute intervals. Print a summary of the announcement spikes including the timestamp and the number of announcements.": 0.19999999999999998
        },
        "avg_similarity_score": 0.15765119305515518
    },
    {
        "instruction": "Analyze MOAS Prefixes and their related ASes from RouteViews collectors for the year 2010 using Event Correlation.",
        "input": "Time window: January 1, 2010, 00:00:00 to December 31, 2010, 23:59:59\nCollectors: route-views2, route-views3, route-views4, ris-ripe, bview\nRecord Type: updates",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2010-01-01 00:00:00\"\nend_time = \"2010-12-31 23:59:59\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\", \"ris-ripe\", \"bview\"],\n    record_type=\"updates\"\n)\n\n# Dictionary to store MOAS prefixes and related ASes\nmoas_prefixes = {}\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n   # Check for BGP announcements\n    if elem.type == \"A\":\n      prefix = elem.fields[\"prefix\"]\n        as_path = elem.fields[\"as-path\"].split()\n        origin_as = as_path[-1]\n    \n   # Event Correlation:\n   # If the prefix is not already in the dictionary then add it, otherwise update the `ases` list\n  if prefix not in moas_prefixes:\n  moas_prefixes[prefix] = {'ases': [origin_as]}\n  else: \n  moas_prefixes[prefix]['ases'].append(origin_as)\n  \n... (rest of the code to analyze the moas_prefixes)",
        "most_similar_instructions": {
            "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.": 0.24489795918367344,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.22222222222222224,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.21052631578947367,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.1818181818181818,
            "Collect MOAS (Multi Origin ASes) prefixes over the last week, perform topological analysis and visualize migration patterns.": 0.17647058823529413,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.17142857142857143,
            "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.": 0.1702127659574468,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.16666666666666669,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.16393442622950818,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.15151515151515152
        },
        "avg_similarity_score": 0.12906472326766918
    },
    {
        "instruction": "Collect all unannounced announcements from the RIS collector in London (rrc03).",
        "input": "Collector: rrc03\nType: announcements\nFilter: prefix any ''",
        "output": "import pybgpstream\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    collectors=[\"rrc03\"],\n    record_type=\"announcements\",\n    filter=\"prefix any ''\"\n)\n\n# Process announcement records\nfor rec in stream.records():\n    for elem in rec:\n   as_path = elem.fields[\"as-path\"].split()\n   prefix = elem.fields[\"prefix\"]\n   print(prefix + \": \" + \" -> \".join(as_path))",
        "most_similar_instructions": {
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.20689655172413793,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.2051282051282051,
            "Access live stream data of type 'A'(announcements) from the collector route-views2 over a four-hour period (February 15, 2021, 09:00:00 UTC, to February 15, 2021, 13:59:59 UTC) and store the data in a Pandas dataframe.": 0.19230769230769232,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.1764705882352941,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.17142857142857143,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.1702127659574468,
            "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.": 0.15384615384615385,
            "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.": 0.14634146341463417,
            "Analyze MOAS Prefixes and their related ASes from RouteViews collectors for the year 2010 using Event Correlation.": 0.14285714285714285,
            "Collect BGP update data for December 12, 2017, from multiple RouteViews collectors. Identify BGP announcements made by AS39523 during the time window from 04:00 to 08:00 UTC. Create a time series plot showing the number of announcements every 15 minutes during that period.": 0.14285714285714285
        },
        "avg_similarity_score": 0.10871594928592031
    },
    {
        "instruction": "Collect updates from the two RIS collectors located in Europe (rrc03 and rrc04) using MOAS Prefixes. Collect only records between March 3, 2018, to March 5, 2018.",
        "input": "Time window: March 3, 2018, 00:00:00 to March 5, 2018, 00:00:00\nCollectors: rrc03, rrc04\nMOAS: Prefixes",
        "output": "import pybgpstream\nfrom datetime import datetime\n\n# Define the time window around the incident\nstart_time = \"2018-03-03 00:00:00\"\nend_time = \"2018-03-05 00:00:00\"\n\n# Set MOAS Prefixes\nMOAS_prefixes = ['1.0.0.0/8', '2.0.0.0/8', '3.0.0.0/8', '4.0.0.0/8', '5.0.0.0/8', '6.0.0.0/8', \n    '7.0.0.0/8', '8.0.0.0/8', '9.0.0.0/8', '10.0.0.0/8', '11.0.0.0/8', '12.0.0.0/8', '13.0.0.0/8', \n    '14.0.0.0/8', '15.0.0.0/8', '16.0.0.0/8', '17.0.0.0/8', '18.0.0.0/8', '19.0.0.0/8', '",
        "most_similar_instructions": {
            "Collect all unannounced announcements from the RIS collector in London (rrc03).": 0.3157894736842105,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.21818181818181817,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.19999999999999998,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.19607843137254902,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.18461538461538463,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.15789473684210525,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.15584415584415584,
            "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.": 0.14705882352941174,
            "Collect BGP update data for April 25, 2018, to April 26, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS10297 (eNet) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.14492753623188406,
            "Use the MOAS (Multiple Origin AS) prefixes to measure the AS path inflation from November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.": 0.14285714285714285
        },
        "avg_similarity_score": 0.12360014096674352
    },
    {
        "instruction": "Lookup BGP data records for IPv4 prefixes from ASN 64399 between January 22, 2006, 00:00:00 and January 23, 2006,00:00:00. Calculate the total number of BGP announcements and AS paths of each prefix.",
        "input": "Time window: January 22, 2006, 00:00:00 to January 23, 2006, 00:00:00\nCollectors: route-views2, ris-ripe, bview\nProject: ris\nRecord Type: ribs\nFilter: peer 64399",
        "output": "import pybgpstream\n\nstart_time = \"2006-01-22 00:00:00\"\nend_time = \"2006-01-23 00:00:00\"\n\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    project=\"ris\",\n    collectors=[\"route-views2\", \"ris-ripe\", \"bview\"],\n    record_type=\"ribs\",\n    filter=\"peer 64399\"\n)\n\nipv4_prefixes_with_announcements = set()\ntotal_announcements = 0\ntotal_paths = 0\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\" and elem.fields[\"ip-version\"] == \"4\":\n            total_announcements += 1\n            total_paths += 1\n            prefix = elem.fields[\"prefix\"]\n            ipv4_prefixes_with_announcements.add(prefix)\n\nresults = []\nresults.append(f\"Total Number of Announcements: {total_announcements}\")\nresults.append(f\"Total Number of Paths: {total_paths}\")\nresults.append(\"\\nIPv4 Prefixes with Announcements:\")\n\nfor prefix in ipv4_prefixes_with_announcements:\n    results.append(prefix)\n\nwith open('as63934_announcements.txt', 'w') as output_file:\n    output_file.write('\\n'.join(results))",
        "most_similar_instructions": {
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.42424242424242425,
            "Collect BGP announcement data for AS23724 from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Analyze and plot the number of BGP announcements per hour for AS23724 during this time frame. Additionally, provide the total number of announcements for AS23724, the hour with the maximum announcements, and the top 5 most common AS paths announced by AS23724. Save the results in a text document.": 0.3508771929824561,
            "Collect BGP update data from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Focus on AS23724 and analyze the number of BGP announcements made by AS23724 on an hourly basis during that time period. Additionally, identify the top 10 most common AS paths announced by AS23724 on April 8, 2010, and visualize them.": 0.3495145631067961,
            "Collect BGP announcement data for AS12389 from multiple RouteViews collectors for the time window between April 26, 2017, 22:00:00 and April 26, 2017, 23:00:00. Identify and report anomalies in BGP announcements for AS12389, specifically if the number of announcements exceeds a threshold of 1000 per minute. Additionally, provide a list of the top 5 prefixes originated by AS12389 during this time window.": 0.3300970873786408,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 00:00:00 on January 22, 2006, and 00:00:00 on January 23, 2006. Analyze BGP announcements by Con Edison (AS27506) and create two plots: 1) a bar chart showing the number of announcements for each prefix, and 2) a scatter plot showing the timestamps of announcements for the top 10 prefixes with the highest number of announcements. The timestamps should be in UTC format.": 0.3275862068965517,
            "Collect BGP announcement data for AS39523 from multiple RouteViews collectors for the time window between December 12, 2017, 04:00:00 and December 12, 2017, 08:00:00. Analyze the data to identify and report announcement spikes, which are defined as the number of announcements exceeding twice the mean count per 5-minute intervals. Print a summary of the announcement spikes including the timestamp and the number of announcements.": 0.3018867924528302,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.2921348314606742,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.28260869565217395,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.2777777777777778,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.2653061224489796
        },
        "avg_similarity_score": 0.2050456818440363
    },
    {
        "instruction": "Measure AS path inflation for prefixes learned from ASN 65547. Collect data for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00, and calculate the AS Path length for origin AS 65547.",
        "input": "Time window: January 22, 2006, 00:00:00 to January 23, 2006, 00:00:00\nCollectors: route-views2, ris-ripe, bview\nProject: ris\nRecord Type: ribs\nFilter: MOAS 65547",
        "output": "import pybgpstream\n\nstart_time = \"2006-01-22 00:00:00\"\nend_time = \"2006-01-23 00:00:00\"\n\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    project=\"ris\",\n    collectors=[\"route-views2\", \"ris-ripe\", \"bview\"],\n    record_type=\"ribs\",\n    filter=\"moas 65547\"\n)\n\nas_path_lengths = []\n\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"R\":\n            as_path = elem.fields[\"as-path\"].split()\n            if as_path[-1] == \"65547\":\n                as_path_length = len(as_path) \n                as_path_lengths.append(as_path_length)\n\nwith open('as65547_as_path_lengths.txt', 'w') as output_file:\n    for length in as_path_lengths:\n        output_file.write(str(length))\n        output_file.write(\"\\n\")",
        "most_similar_instructions": {
            "Lookup BGP data records for IPv4 prefixes from ASN 64399 between January 22, 2006, 00:00:00 and January 23, 2006,00:00:00. Calculate the total number of BGP announcements and AS paths of each prefix.": 0.5454545454545455,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.45098039215686275,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.3829787234042553,
            "Monitor the network connections from RouteViews2 in order to measure AS path inflation in the given time window. Calculate and visualize the AS Path length distribution.": 0.3636363636363637,
            "Collect BGP update data from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Focus on AS23724 and analyze the number of BGP announcements made by AS23724 on an hourly basis during that time period. Additionally, identify the top 10 most common AS paths announced by AS23724 on April 8, 2010, and visualize them.": 0.32075471698113206,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 00:00:00 on January 22, 2006, and 00:00:00 on January 23, 2006. Analyze BGP announcements by Con Edison (AS27506) and create two plots: 1) a bar chart showing the number of announcements for each prefix, and 2) a scatter plot showing the timestamps of announcements for the top 10 prefixes with the highest number of announcements. The timestamps should be in UTC format.": 0.31932773109243695,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between 09:00:00 and 23:59:00 on December 24, 2004. Analyze BGP announcements per AS per minute and create a time series plot showing the frequency of announcements for the top 10 ASes over time. Save the raw data in a CSV file named 'as_announcements.csv'.": 0.3168316831683169,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.3157894736842105,
            "Collect BGP announcement data for AS23724 from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Analyze and plot the number of BGP announcements per hour for AS23724 during this time frame. Additionally, provide the total number of announcements for AS23724, the hour with the maximum announcements, and the top 5 most common AS paths announced by AS23724. Save the results in a text document.": 0.30769230769230765
        },
        "avg_similarity_score": 0.21229463826190456
    },
    {
        "instruction": "Access PyBGPStream library to analyze topological and security parameters for all IPv6 prefixes announced by ASN 4668. Identify the type of announcements and BGP communities associated with these announcements.",
        "input": "Time window: <noinput>\nCollectors: route-views2, ris-ripe, bview\nProject: ris\nRecord Type: updates\nFilter: Peer 4668 and Ipversion 6",
        "output": "import pybgpstream\n\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    project=\"ris\",\n    collectors=[\"route-views2\", \"ris-ripe\", \"bview\"],\n    record_type=\"updates\",\n    filter=\"peer 4668 and ipversion 6\"\n)\n\nannouncement_data = defaultdict(lambda: {'types': [], 'communities': []})\n\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\" and elem.fields[\"ip-version\"] == \"6\":\n            prefix = elem.fields[\"prefix\"]\n            announcement_data[prefix][\"types\"].append(elem.fields[\"type\"])\n            announcement_data[prefix][\"communities\"].append(elem.fields[\"communities\"])\n\nresults = []\nfor prefix, data in announcement_data.items():\n    results.append(f\"Prefix {prefix}: Types - {','.join(data['types'])}, Communities - {','.join(data['communities'])}\")\n\nwith open('as4668_announcements.txt', 'w') as output_file:\n    output_file.write('\\n'.join(results))",
        "most_similar_instructions": {
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.2692307692307692,
            "Lookup BGP data records for IPv4 prefixes from ASN 64399 between January 22, 2006, 00:00:00 and January 23, 2006,00:00:00. Calculate the total number of BGP announcements and AS paths of each prefix.": 0.21212121212121213,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.20833333333333334,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.2,
            "Determine the relation between ASN 65501 and ASN 65500 by checking the length of BGP paths between them over the past month.": 0.19607843137254902,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.18867924528301888,
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.17910447761194026,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.17582417582417584,
            "Analyze MOAS Prefixes and their related ASes from RouteViews collectors for the year 2010 using Event Correlation.": 0.17391304347826086,
            "Collect BGP update data for April 25, 2018, to April 26, 2018, from multiple RouteViews collectors. Identify BGP announcements made by AS10297 (eNet) and the hijacked prefixes. Create a time series plot showing the number of announcements every hour during that period.": 0.16901408450704225
        },
        "avg_similarity_score": 0.1353102204844587
    },
    {
        "instruction": "Using PyBGPStream stream data sources, analyze various communities announced by ASN 9498. Calculate the size of the communities as well as the number of prefixes announced by each community.",
        "input": "Time window: <noinput>\nCollectors: route-views2, ris-ripe, bview\nProject: ris\nRecord Type: updates\nFilter: Peer 9498",
        "output": "import pybgpstream\nfrom collections import Counter\n\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    project=\"ris\",\n    collectors=[\"route-views2\", \"ris-ripe\", \"bview\"],\n    record_type=\"updates\",\n    filter=\"peer 9498\"\n)\n\ncommunities = defaultdict(lambda: {'size': 0, 'prefixes': []})\n\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            community_size = len(elem.fields[\"communities\"].split(':'))\n            community = elem.fields[\"communities\"]\n            prefix = elem.fields[\"prefix\"]\n            communities[community][\"size\"] = community_size\n            communities[community][\"prefixes\"].append(prefix)\n\ncommunity_counter = Counter({community: data[\"size\"] for community, data in communities.items()})\nmost_common_communities = community_counter.most_common()\n\nresults = []\nresults.append(f\"Total Unique Communities: {len(communities)}\")\nresults.append(\"\\nMost Common Communities:\")\nfor community, size in most_common_communities:\n    results.append(f\"Community: {community}, Size: {size}, Prefixes - {','.join(communities[community]['prefixes'])}\")\n\nwith open('as9498_communities.txt', 'a') as output_file:\n    output_file.write('\\n'.join(results))",
        "most_similar_instructions": {
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.3076923076923077,
            "Access PyBGPStream library to analyze topological and security parameters for all IPv6 prefixes announced by ASN 4668. Identify the type of announcements and BGP communities associated with these announcements.": 0.27586206896551724,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.2553191489361702,
            "Lookup BGP data records for IPv4 prefixes from ASN 64399 between January 22, 2006, 00:00:00 and January 23, 2006,00:00:00. Calculate the total number of BGP announcements and AS paths of each prefix.": 0.24242424242424243,
            "Identify the top 10 AS paths with the highest number of transits of IPv4 prefixes originated from AS 111 ayde-11.": 0.24000000000000002,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00. Identify BGP announcements by AS27506, analyze the most common prefixes announced by AS27506, and provide the count of announcements and the announcement time window for the top 5 prefixes. Save the results in a text document.": 0.1978021978021978,
            "Access live stream data sources to study the AS communities from October 10, 2020, 15:00:00 UTC, until October 10, 2020, 16:00:00 UTC.": 0.18181818181818185,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.1794871794871795,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.17500000000000004,
            "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.": 0.1714285714285714
        },
        "avg_similarity_score": 0.14561055370494755
    },
    {
        "instruction": "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.",
        "input": "Time window: April 22, 2021, to May 22, 2021\nCollectors: route-views2, route-views6\nRecord Type: updates\nPrefix of Interest: 72.4.0.0/16",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2021-04-22 00:00:00\"\nend_time = \"2021-05-22 23:59:59\"\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\", \"route-views6\"],\n    record_type=\"updates\",\n    filter=\"prefix 72.4.0.0/16\"\n    )\n\n# Collect data\nas_path_lengths = []\nfor elem in stream:\n    as_path_length = len(elem.fields['as-path'].split(' '))\n    as_path_lengths.append(as_path_length)\n\n# Compute and print the mean AS path inflaiton\nmean_as_path_inflation = sum(as_path_lengths) / len(as_path_lengths)\nprint(f\"Mean AS Path Inflation: {mean_as_path_inflation}\")",
        "most_similar_instructions": {
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.36781609195402293,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.34090909090909094,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.28571428571428575,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.2857142857142857,
            "Visualize the BGP update timeline for the prefix 101.101.101.0/24 during the time window from May 8, 2019, 14:00:00 UTC, to May 8, 2019, 16:00:00 UTC. Use data from multiple RouteViews collectors, including rrc00, route-views1.saopaulo, and route-views2.saopaulo. Collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.26785714285714285,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.2631578947368421,
            "Measure AS path inflation for prefixes learned from ASN 65547. Collect data for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00, and calculate the AS Path length for origin AS 65547.": 0.25974025974025977,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.25925925925925924,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.2558139534883721,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.2558139534883721
        },
        "avg_similarity_score": 0.17418833539636147
    },
    {
        "instruction": "Collect MOAS (Multiple Origin AS) prefixes that originate from AS65501 during the time window from March 3, 2021, 00:00:00 to March 3, 2021, 23:59:59.",
        "input": "Time window: March 3, 2021, 00:00:00 to March 3, 2021, 23:59:59\nCollectors: No input\nRecord Type: ribs\nOrigin AS: 65501",
        "output": "import pybgpstream\nimport pprint\n\n# Define the time window\nstart_time = \"2021-03-03 00:00:00\"\nend_time = \"2021-03-03 23:59:59\"\n\n# Initialize the BGPStream objec\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    record_type=\"ribs\"\n    )\n\n# Collect data\nmoas_prefixes = []\nfor elem in stream:\n    if elem.fields['origin-as'] == \"65501\":\n        moas_prefixes.append(elem.fields[\"prefix\"])\n\n# Print the MOAS prefixes\nprint(\"MOAS Prefixes:\")\npprint.pprint(moas_prefixes)",
        "most_similar_instructions": {
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.4675324675324675,
            "Use the MOAS (Multiple Origin AS) prefixes to measure the AS path inflation from November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.": 0.456140350877193,
            "Analyze the MOAS (Multiple Origin AS) prefixes propagated by AS7018 over a two-hour window (February 13, 2021, 10:00:00 UTC, to February 13, 2021, 12:59:59 UTC) from two specific collectors: route-views2 and route-views4. Collect and analyze BGP ribs records of type 'A' (announcements).": 0.3376623376623377,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.3333333333333333,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.3291139240506329,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.325,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.32142857142857145,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.3055555555555556,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.303030303030303,
            "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.": 0.30000000000000004
        },
        "avg_similarity_score": 0.19766448109126425
    },
    {
        "instruction": "Perform topological analysis on the RouteViews collector rrc00 for a particular region, analyzing the AS paths of the BGP announcements from this region and the number of blanket announcements to study the formation of clustering and spokes-hub structures.",
        "input": "Time window: No input\nCollectors: rrc00\nRecord Type: ribs\nRegion of Interest: No input",
        "output": "import pybgpstream\nimport networkx as nx\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    collectors=['rrc00'],\n    record_type='ribs'\n    )\n\n# set up graph G object\nG = nx.Graph()\n\nfor elem in stream:\n    # get the AS paths for the BGP announcements\n    as_path = elem.fields['as-path'].split(' ')\n    # create the edges in the graph G\n    for i, asn in enumerate(as_path):\n        if i+1 < len(as_path):\n            G.add_edge(as_path[i], as_path[i+1])\n\n# compute the clustering and hub scores\nclustering_scores = nx.clustering(G)\nhub_scores = nx.degree_centrality(G)\n\n# analyze the clustering and hub scores to study the formation of the topology\n# ...",
        "most_similar_instructions": {
            "Collect BGP update data for the entire month of February 2014 from multiple RouteViews collectors. Separate BGP announcements and withdrawals per day. Visualize the data using line charts to show the daily trends for both announcements and withdrawals.": 0.2597402597402597,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.2580645161290323,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.24561403508771928,
            "Identify the top 10 AS paths with the highest number of transits of IPv4 prefixes originated from AS 111 ayde-11.": 0.23333333333333334,
            "Collect BGP announcement data for AS23724 from multiple RouteViews collectors for the time window between April 8, 2010, 00:00:00 and April 9, 2010, 00:00:00. Analyze and plot the number of BGP announcements per hour for AS23724 during this time frame. Additionally, provide the total number of announcements for AS23724, the hour with the maximum announcements, and the top 5 most common AS paths announced by AS23724. Save the results in a text document.": 0.22413793103448276,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.22222222222222224,
            "Collect BGP announcement data for AS39523 from multiple RouteViews collectors for the time window between December 12, 2017, 04:00:00 and December 12, 2017, 08:00:00. Analyze the data to identify and report announcement spikes, which are defined as the number of announcements exceeding twice the mean count per 5-minute intervals. Print a summary of the announcement spikes including the timestamp and the number of announcements.": 0.2222222222222222,
            "Collect BGP announcement and withdrawal data from multiple RouteViews collectors for the time window between February 1, 2014, 00:00:00 and February 28, 2014, 23:59:59. Generate a report-style summary of BGP activity for each day in February 2014, including the number of announcements and withdrawals per day. Additionally, provide the total number of announcements and withdrawals for the entire month. Save the results in a text document.": 0.21818181818181817,
            "Lookup BGP data records for IPv4 prefixes from ASN 64399 between January 22, 2006, 00:00:00 and January 23, 2006,00:00:00. Calculate the total number of BGP announcements and AS paths of each prefix.": 0.21052631578947367,
            "Access PyBGPStream library to analyze topological and security parameters for all IPv6 prefixes announced by ASN 4668. Identify the type of announcements and BGP communities associated with these announcements.": 0.20588235294117646
        },
        "avg_similarity_score": 0.17281945108141927
    },
    {
        "instruction": "Access live stream data sources from CAIDA to analyze the configurations of the customers of ISPs and study any updates.",
        "input": "Time window: No input\nCollectors: CAIDA\nRecord Type: updates",
        "output": "import pybgpstream\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    from_time=None, \n    until_time=None,\n    collectors=[\"CAIDA\"], \n    record_type=\"updates\"\n)\n\n# iterate through the stream\nfor elem in stream:\n    if elem.type == \"A\":\n        # collect the data for Customer Configurations\n        # ...\n        # analyze the data to study updates\n        # ...",
        "most_similar_instructions": {
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.46511627906976744,
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.36842105263157887,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.3333333333333333,
            "Using PyBGPStream stream data sources, analyze various communities announced by ASN 9498. Calculate the size of the communities as well as the number of prefixes announced by each community.": 0.32653061224489793,
            "Access live stream data sources to study the AS communities from October 10, 2020, 15:00:00 UTC, until October 10, 2020, 16:00:00 UTC.": 0.3043478260869565,
            "Access live stream data sources from RouteViews and RIPE NCC using the PyBGPStream library and collect BGP update records from the 2020-04-03 14:00:00 to 15:00:00 time window.": 0.30188679245283023,
            "Access the live stream data sources from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and retrieve BGP announcements of 'A' (Announcement) type from collector rrc00.": 0.30188679245283023,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.2926829268292683,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.25000000000000006,
            "Access PyBGPStream library to analyze topological and security parameters for all IPv6 prefixes announced by ASN 4668. Identify the type of announcements and BGP communities associated with these announcements.": 0.24489795918367346
        },
        "avg_similarity_score": 0.16997418731995134
    },
    {
        "instruction": "Analyze the communities of autonomous systems that announce the prefix 75.125.0.0/16 over a specific period of time to study any malicious activity in the AS path.",
        "input": "Time window: June 3, 2021, 00:00:00 to June 3, 2021, 23:59:59\nCollectors: route-views2, route-views3, route-views4\nRecord Type: updates\nPrefix of Interest: 75.125.0.0/16",
        "output": "import pybgpstream\n\n# Define the time window\nstart_time = \"2021-06-03 00:00:00\"\nend_time = \"2021-06-03 23:59:59\"\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\"],\n    record_type=\"updates\",\n    filter=\"prefix 75.125.0.0/16\"\n)\n\n# Collect data\nas_comm = {}\nfor elem in stream:\n    as_path = elem.fields['as-path'].split(' ')\n    for asn in as_path:\n        if asn not in as_comm:\n            as_comm[asn] = elem.fields['communities'].split(' ')\n\n# Analyze the communities to study malicious activity in AS paths\n# ...",
        "most_similar_instructions": {
            "Access live stream data sources from CAIDA to analyze the configurations of the customers of ISPs and study any updates.": 0.28,
            "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.": 0.26865671641791045,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.24489795918367346,
            "Identify the MOASes that announce AS 2497 and determine the path inflation.": 0.23809523809523808,
            "Study the communities of prefixes belonging to AS33636, using both RIB entries and updates over a one hour period (February 12, 2021, 12:00:00 UTC, to February 12, 2021, 13:59:59 UTC) from a specific collector, route-views.jj. Capture the BGP updates for AS Path length, local preference, origin, MED and BGP communities.": 0.23255813953488372,
            "Monitor the network connections from RouteViews2 in order to measure AS path inflation in the given time window. Calculate and visualize the AS Path length distribution.": 0.21428571428571427,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.21212121212121213,
            "Using PyBGPStream stream data sources, analyze various communities announced by ASN 9498. Calculate the size of the communities as well as the number of prefixes announced by each community.": 0.20338983050847456,
            "Perform topological analysis on the RouteViews collector rrc00 for a particular region, analyzing the AS paths of the BGP announcements from this region and the number of blanket announcements to study the formation of clustering and spokes-hub structures.": 0.20289855072463772,
            "Study the communities of prefixes from the collector rrc13 using the PyBGPStream library between the 2020-06-12 16:00:00 and 2020-06-12 17:00:00 time window.": 0.20000000000000004
        },
        "avg_similarity_score": 0.1517543192756179
    },
    {
        "instruction": "Analyze the historical trends of autonomous systems announcements for the prefix 72.1.0.0/16.",
        "input": "Time window: No input\nCollectors: route-views2, route-views3\nRecord Type: ribs\nPrefix of Interest: 72.1.0.0/16",
        "output": "import pybgpstream\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    collectors=[\"route-views2\", \"route-views3\"],\n    record_type=\"ribs\",\n    filter=\"prefix 72.1.0.0/16\"\n)\n\n# Collect data\nas_paths = {}\nfor elem in stream:\n    as_path = elem.fields['as-path'].split(' ')\n    for asn in as_path:\n        if asn not in as_paths:\n            as_paths[asn] = [elem.time]\n        else:\n            as_paths[asn].append(elem.time)\n\n# Analyze the data to study historical trends\n# ...",
        "most_similar_instructions": {
            "Analyze the communities of autonomous systems that announce the prefix 75.125.0.0/16 over a specific period of time to study any malicious activity in the AS path.": 0.43478260869565216,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.2857142857142857,
            "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.": 0.2641509433962264,
            "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.": 0.2456140350877193,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.23076923076923078,
            "Access live stream data sources from CAIDA to analyze the configurations of the customers of ISPs and study any updates.": 0.22222222222222224,
            "Access live stream data sources from zebra based on the filter \u201cpeer 10.0.0.1 or peer 10.0.0.2\u201d.": 0.2105263157894737,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.18181818181818182,
            "Analyze MOAS Prefixes and their related ASes from RouteViews collectors for the year 2010 using Event Correlation.": 0.1818181818181818,
            "Using PyBGPStream stream data sources, analyze various communities announced by ASN 9498. Calculate the size of the communities as well as the number of prefixes announced by each community.": 0.17777777777777778
        },
        "avg_similarity_score": 0.13624676754092915
    },
    {
        "instruction": "Secure the border gateway protocol announcements related to the address range 73.7.0.0/24 by performing security analysis on the AS relationships.",
        "input": "Time window: No input\nCollectors: No input\nRecord Type: updates\nAddress Range: 73.7.0.0/24",
        "output": "import pybgpstream\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    record_type=\"updates\",\n    filter=\"prefix 73.7.0.0/24\"\n)\n\n# Collect data\nas_relationships = {}\nfor elem in stream:\n    if elem.type == \"A\":\n        as_path = elem.fields['as-path'].split(' ')\n        for i, asn in enumerate(as_path):\n            if i+1 < len(as_path):\n                if (asn, as_path[i+1]) not in as_relationships:\n                    as_relationships[(asn, as_path[i+1])] = 1\n                else:\n                    as_relationships[(asn, as_path[i+1])] += 1\n\n# Analyze the AS relationships to secure the BGP announcements \n# ...",
        "most_similar_instructions": {
            "Analyze the historical trends of autonomous systems announcements for the prefix 72.1.0.0/16.": 0.25,
            "Analyze the communities of autonomous systems that announce the prefix 75.125.0.0/16 over a specific period of time to study any malicious activity in the AS path.": 0.22222222222222224,
            "Monitor the network connections from RouteViews2 in order to measure AS path inflation in the given time window. Calculate and visualize the AS Path length distribution.": 0.2,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.186046511627907,
            "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.": 0.1846153846153846,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.1702127659574468,
            "Collect RIB entries from RouteViews collector from the time window connected to the incident, analyze and visualize the route-preference between RouteViews BGP peers.": 0.16666666666666666,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.1643835616438356,
            "Collect BGP update data for April 26, 2017, from multiple RouteViews collectors. Calculate and visualize the trends in BGP announcements by AS12389 per minute. Identify the prefixes originated by AS12389. Detect anomalies by setting a threshold and reporting any minute with an announcement count exceeding the threshold as an anomaly.": 0.16216216216216217,
            "Collect BGP update data from multiple RouteViews collectors for the time window between 18:00:00 and 22:00:00 on February 24, 2008. Focus on the prefix 208.65.153.0/24. Detect any unauthorized BGP announcements for this prefix. If any unauthorized announcements are detected, print the AS numbers responsible for these announcements.": 0.1518987341772152
        },
        "avg_similarity_score": 0.11763858778044525
    },
    {
        "instruction": "Analyze the network configuration and reliability of BGP announcements for the prefix 64.233.161.0/24 to detect any malicious activity.",
        "input": "Time window: No input\nCollectors: route-views2, route-views3, route-views4\nRecord Type: updates\nPrefix of Interest: 64.233.161.0/24",
        "output": "import pybgpstream\n\n# Initialize the BGPStream object\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    collectors=[\"route-views2\", \"route-views3\", \"route-views4\"],\n    record_type=\"updates\",\n    filter=\"prefix 64.233.161.0/24\"\n)\n\n# Collect data\npeer_asns = set()\nfor elem in stream:\n    peer_asns.add(elem.fields['peer-asn'])\n\n# Analyze the configurations of the peers of the BGP announcements\n# to study their network reliability and detect malicious activity\n# ...",
        "most_similar_instructions": {
            "Analyze the historical trends of autonomous systems announcements for the prefix 72.1.0.0/16.": 0.4210526315789474,
            "Analyze the communities of autonomous systems that announce the prefix 75.125.0.0/16 over a specific period of time to study any malicious activity in the AS path.": 0.3846153846153846,
            "Study the communities of AS 15487 and generate a report with statistics and top-10 announcements for the AS.": 0.24390243902439024,
            "Access live stream data sources from CAIDA to analyze the configurations of the customers of ISPs and study any updates.": 0.23809523809523808,
            "Determine the relation between ASN 65501 and ASN 65500 by checking the length of BGP paths between them over the past month.": 0.22727272727272727,
            "Visualize the BGP update timeline for the prefix 64.233.161.0/24 during the time window from May 7, 2005, 00:00:00 to May 7, 2005, 23:59:00. Use data from multiple RouteViews collectors, including route-views2, route-views3, route-views4, ris-ripe, bview, and rib, and collect BGP update records of type 'A' (Announcements) for this prefix. Plot the timeline to show how different Autonomous Systems (ASes) contributed to the announcements over time.": 0.22222222222222224,
            "Secure the border gateway protocol announcements related to the address range 73.7.0.0/24 by performing security analysis on the AS relationships.": 0.21739130434782608,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.21621621621621623,
            "Access the live stream data sources and retrieve BGP withdrawals of 'W' (Withdrawal) type from the collectors bgp.as6453.net and route-views.eqix for the time window from April 21, 2020, 00:00:00 UTC, to April 21, 2020, 05:59:59 UTC.": 0.2121212121212121,
            "Collect BGP announcement data from multiple RouteViews collectors for the time window between February 24, 2008, 18:00:00 and February 24, 2008, 22:00:00. Identify unauthorized BGP announcements for the prefix 208.65.153.0/24 and list the ASes responsible for these announcements. If unauthorized announcements are detected, print the list of ASes; otherwise, indicate that no unauthorized announcements were found.": 0.20930232558139533
        },
        "avg_similarity_score": 0.16017217809547474
    },
    {
        "instruction": "Using MOAS, identify and display BGP announcements announcing the prefix 1.2.0.0/16 in the rrc00, linx and route-views.oregon-ix collectors.",
        "input": "Prefix: 1.2.0.0/16, Collectors: rrc00, linx, route-views.oregon-ix",
        "output": "import pybgpstream\n\n# Define the prefix and the collectors\nprefix = \"1.2.0.0/16\"\ncollectors = [\"rrc00\", \"linx\", \"route-views.oregon-ix\"]\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    collectors=collectors,\n    record_type=\"updates\",\n    filter=\"prefix more {}\".format(prefix)\n)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\" and elem.fields['prefix'] == prefix:\n            print(\"Timestamp: {}, Originating ASN: {}, AS Path: {}\".format(\n                datetime.utcfromtimestamp(rec.time).strftime('%Y-%m-%d %H:%M:%S'),\n                elem.fields[\"peer-asn\"],\n                elem.fields[\"as-path\"]\n            ))",
        "most_similar_instructions": {
            "Analyze the historical trends of autonomous systems announcements for the prefix 72.1.0.0/16.": 0.34146341463414637,
            "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.": 0.2903225806451613,
            "Analyze the network configuration and reliability of BGP announcements for the prefix 64.233.161.0/24 to detect any malicious activity.": 0.2553191489361702,
            "Analyze the communities of autonomous systems that announce the prefix 75.125.0.0/16 over a specific period of time to study any malicious activity in the AS path.": 0.2545454545454545,
            "Collect RIBs from RIS-BOG collector using IPv4 between 11:00 and 11:05 AM on July 8th, 2019. Query the collected RIBs for the prefix 8.7.0.0/16 and generate the number of unique ASNs originating this prefix.": 0.24242424242424243,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.22950819672131148,
            "Collect BGP update data for November 12, 2018, to November 13, 2018, from multiple RouteViews collectors. Identify and display BGP announcements where the suspicious prefix 216.58.192.0/19 is announced by ASNs 20485 (TransTelecom), 4809 (China Telecom), or 37282 (MainOne). Create a time series plot showing the number of suspicious announcements over time.": 0.22499999999999995,
            "Secure the border gateway protocol announcements related to the address range 73.7.0.0/24 by performing security analysis on the AS relationships.": 0.20408163265306126,
            "Collect BGP update data for November 12, 2018, to November 13, 2018, from multiple RouteViews collectors. Identify BGP announcements for the suspicious prefix 216.58.192.0/19 that involve ASNs 20485 (TransTelecom), 4809 (China Telecom), or 37282 (MainOne). Create a bar chart showing the number of occurrences of each ASN in the suspicious AS paths.": 0.19753086419753085,
            "Collect BGP update data for January 5, 2017, from multiple RouteViews collectors. Calculate and visualize the hourly trends in BGP announcements. Identify the top 10 most common AS paths in the data. Detect anomalies by setting a threshold and reporting any hourly count exceeding the threshold as an anomaly.": 0.18918918918918917
        },
        "avg_similarity_score": 0.14778339464289406
    },
    {
        "instruction": "Analyze BGP community for BGP update records in the last day from route-views.bom01, route-views.equinix-jp, and route-views.saopaulo collectors.",
        "input": "Collectors: route-views.bom01, route-views.equinix-jp, route-views.saopaulo, Start time: today's date, 00:00:00, End time: today's date, 23:59:59.",
        "output": "import pybgpstream\nfrom datetime import datetime, timedelta\n\n# Get start time and end time\ntoday = datetime.today()\nstart_time = (today - timedelta(days=1)).strftime('%Y-%m-%d %H:00:00')\nend_time = today.strftime('%Y-%m-%d %H:00:00')\n\n# Define the collectors\ncollectors = [\"route-views.bom01\", \"route-views.equinix-jp\", \"route-views.saopaulo\"]\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=collectors,\n    record_type=\"updates\"\n)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            print(\"Time: {}, BGP Communities: {}\".format(\n                datetime.utcfromtimestamp(rec.time).strftime('%Y-%m-%d %H:%M:%S'),\n                elem.fields[\"communities\"]\n            ))",
        "most_similar_instructions": {
            "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.": 0.2950819672131148,
            "Using MOAS, identify and display BGP announcements announcing the prefix 1.2.0.0/16 in the rrc00, linx and route-views.oregon-ix collectors.": 0.2857142857142857,
            "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.": 0.21428571428571427,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.1923076923076923,
            "Separate the BGP announcements into valid and invalid updates received by the AS 13414 for the time window from April 18, 2021, 00:00:00 UTC, to April 18, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and listen live to any subsequent announcements.": 0.1891891891891892,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.18666666666666668,
            "Analyze the time-series data of the BGP updates received between September 10, 2020, 03:00:00 UTC, to September 10, 2020, 06:00:00 UTC, generated from the route-views.amsix collector.": 0.1754385964912281,
            "Analyze the network configuration and reliability of BGP announcements for the prefix 64.233.161.0/24 to detect any malicious activity.": 0.17391304347826086,
            "Measuring the AS path inflation between AS13273 and AS28715 over a five-hour period (February 14, 2021, 06:00:00 UTC, to February 14, 2021, 11:59:59 UTC) from three collectors: route-views2, route-views3 and route-views4. Collect BGP updates records of type 'A' (announcements).": 0.16901408450704225,
            "Visualize the spike in leaked prefixes over time that were propagated by AS28548 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Use data from multiple collectors, including route-views.sg and route-views.eqix. Collect BGP update records of type 'A' (Announcements) for this time window. Plot the line chart to show the number of leaked prefixes over time.": 0.16842105263157894
        },
        "avg_similarity_score": 0.12779252315067902
    },
    {
        "instruction": "Visualize the PayPal ASN 8187's relationship with other ASes with the Python NetworkX library using data from the rrc12 Python BGPStream collector.",
        "input": "ASN: 8187, Collector: rrc12",
        "output": "import pybgpstream\nimport networkx as nx\n\n# Define the source ASN\nasn = 8187\ncollector = \"rrc12\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=None,\n    until_time=None,\n    collectors=[collector],\n    record_type=\"updates\",\n    filter=\"peer {}\".format(asn)\n)\n\n# Create directed graph object\ngraph = nx.DiGraph()\n\n# Create a graph node for the AS\ngraph.add_node(asn)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        as_path = set([int(asn) for asn in elem.fields['as-path'].split()])\n        # Remove the source ASN\n        as_path.remove(asn)\n        # Create an edge for each AS in the AS PATH\n        for asn in as_path:\n            graph.add_edge(asn, asn, asn)\n\n# Visualize the graph\noptions = {\n    'node_color': 'black',\n    'node_size': 50,\n    'width': 1\n}\nnx.draw_shell(graph, **options)\nplt.title(\"Visualizing PayPal ASN 8187's Relationship with Other ASes\")\nplt.show()",
        "most_similar_instructions": {
            "Live stream data from the RouteViews collector rrc00 and analyze the AS Path Inflation of Carefit ASN 65501.": 0.1951219512195122,
            "Analyze the effect of MOAS (Multiple Origin AS) prefixes on overall BGP network stability during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC, using data from the collector route-views.eqix. Select updates originated by MOAS prefixes only.": 0.19444444444444445,
            "Identify the top 10 AS paths with the highest number of transits of IPv4 prefixes originated from AS 111 ayde-11.": 0.1818181818181818,
            "Analyze the time-series data of the BGP updates received between September 10, 2020, 03:00:00 UTC, to September 10, 2020, 06:00:00 UTC, generated from the route-views.amsix collector.": 0.17857142857142858,
            "Determine the relation between ASN 65501 and ASN 65500 by checking the length of BGP paths between them over the past month.": 0.17777777777777776,
            "Collect all unannounced announcements from the RIS collector in London (rrc03).": 0.1764705882352941,
            "Access live stream data sources from the RouteViews collector connected to the incident. Calculate and visualize the number of BGP communities per view.": 0.17391304347826086,
            "Study the BGP communities for all the outgoing updates sent by the ASN 65530 during the time window from February 11, 2021, 00:00:00 UTC, to February 11, 2021, 05:59:59 UTC. Collect the data from all the route-views collectors and analyze the distribution of the BGP communities.": 0.16216216216216217,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.1568627450980392,
            "Measure AS path inflation on prefix 22.83.164.0/22 from the source ASN 52657 on route-views, bgp.he.net, and route-views.eqix. Collect the data for the time window from April 1, 2020, 00:00:00 UTC, to April 1, 2020, 05:59:59 UTC, and analyze the path inflation.": 0.15584415584415584
        },
        "avg_similarity_score": 0.11433335455309573
    },
    {
        "instruction": "Retrieve and display the history of route announcements for both ipv4 and ipv6 from the prefix 1.1.1.0/24 in the last week's rrc01, rrc02, rrc03, and rrc04 collectors.",
        "input": "Prefix: 1.1.1.0/24; Collectors: rrc01, rrc02, rrc03, rrc04; Time:Last week's date range",
        "output": "import pybgpstream\nfrom datetime import datetime, timedelta\n\n# Get start time and end time\ntoday = datetime.today()\nstart_time = (today - timedelta(days=7)).strftime('%Y-%m-%d %H:00:00')\nend_time = today.strftime('%Y-%m-%d %H:00:00')\n\n# Define the collectors\ncollectors = [\"rrc01\", \"rrc02\", \"rrc03\", \"rrc04\"]\n\n# Define the prefix\nprefix = \"1.1.1.0/24\"\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=collectors,\n    record_type=\"updates\",\n    filter=\"prefix more {}\".format(prefix)\n)\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\" and elem.fields[\"prefix\"] == prefix:\n            print(\"Time: {}, IP Version: {}, AS Path: {}, Communities: {}\".format(\n                datetime.utcfromtimestamp(rec.time).strftime('%Y-%m-%d %H:%M:%S'),\n                elem.fields[\"ip-version\"],\n                elem.fields[\"as-path\"],\n                elem.fields[\"communities\"]\n            ))",
        "most_similar_instructions": {
            "Using MOAS, identify and display BGP announcements announcing the prefix 1.2.0.0/16 in the rrc00, linx and route-views.oregon-ix collectors.": 0.3859649122807018,
            "Analyze the historical trends of autonomous systems announcements for the prefix 72.1.0.0/16.": 0.3333333333333333,
            "Analyze the network configuration and reliability of BGP announcements for the prefix 64.233.161.0/24 to detect any malicious activity.": 0.2962962962962963,
            "Collect all unannounced announcements from the RIS collector in London (rrc03).": 0.2325581395348837,
            "Analyze the communities of autonomous systems that announce the prefix 75.125.0.0/16 over a specific period of time to study any malicious activity in the AS path.": 0.22580645161290322,
            "Collect BGP update data from multiple RouteViews collectors for the time window between July 3, 2013, 00:00:00 and July 3, 2013, 23:59:59. Focus on the prefix 46.166.163.0/24 and detect any spikes in BGP announcements. Visualize the hourly announcements and mark spikes in the plot.": 0.2142857142857143,
            "Secure the border gateway protocol announcements related to the address range 73.7.0.0/24 by performing security analysis on the AS relationships.": 0.21428571428571427,
            "Analyze BGP community for BGP update records in the last day from route-views.bom01, route-views.equinix-jp, and route-views.saopaulo collectors.": 0.21428571428571427,
            "Collect updates from the two RIS collectors located in Europe (rrc03 and rrc04) using MOAS Prefixes. Collect only records between March 3, 2018, to March 5, 2018.": 0.20338983050847456,
            "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.": 0.20289855072463767
        },
        "avg_similarity_score": 0.15639779897583891
    },
    {
        "instruction": "Measure AS path inflation for ASPATH attributes with length > 20 in BGP update records from the 4-day period before November 30, 2020, from the rrc01, rrc02, and rrc03 collectors.",
        "input": "Collectors: rrc01,rrc02,rrc03; Time window: November 26, 2020 00:00:00 to November 30, 2020, 23:59:59, Filter: ASPATH length > 20",
        "output": "import pybgpstream\nfrom datetime import datetime, timedelta\n\n# Get start time and end time\ntoday = datetime.today()\nstart_time = (today - timedelta(days=4)).strftime('%Y-%m-%d %H:00:00')\nend_time = today.strftime('%Y-%m-%d %H:00:00')\n\n# Define the collectors\ncollectors = [\"rrc01\", \"rrc02\", \"rrc03\"]\n\n# Initialize the BGPStream\nstream = pybgpstream.BGPStream(\n    from_time=start_time,\n    until_time=end_time,\n    collectors=collectors,\n    record_type=\"updates\",\n    filter=\"path > 20\"\n)\n\n# Count the number of updates\nupdate_count = 0\n\n# Compute metrics\ninflation_ratio = 0.0\n\n# Process BGP records\nfor rec in stream.records():\n    for elem in rec:\n        if elem.type == \"A\":\n            as_path = elem.fields['as-path'].split()\n            path_length = len(as_path)\n            update_count += 1\n            inflation_ratio += (path_length - 20)\n\n# Calculate the Average Path Inflation\naverage_inflation = inflation_ratio / update_count\n\n# Display results\nprint(f\"Average path inflation = {average_inflation :.2f}\")",
        "most_similar_instructions": {
            "Measure AS path inflation for the prefix 72.4.0.0/16 over the time window from April 22, 2021, to May 22, 2021. Collect the BGP update records from the route-views2 and route-views6 collectors.": 0.3582089552238806,
            "Analyze BGP community for BGP update records in the last day from route-views.bom01, route-views.equinix-jp, and route-views.saopaulo collectors.": 0.33333333333333326,
            "Use the MOAS (Multiple Origin AS) prefixes to measure the AS path inflation from November 30, 2020, 00:00:00 UTC, to November 30, 2020, 05:59:59 UTC.": 0.2711864406779661,
            "Retrieve and display the history of route announcements for both ipv4 and ipv6 from the prefix 1.1.1.0/24 in the last week's rrc01, rrc02, rrc03, and rrc04 collectors.": 0.2580645161290323,
            "Monitor the network connections from RouteViews2 in order to measure AS path inflation in the given time window. Calculate and visualize the AS Path length distribution.": 0.25,
            "Collect BGP update records from the RouteViews2 collector and analyze the MOAS prefixes from the 2020-03-20 16:00:00 time window ending at 17:00:00.": 0.2413793103448276,
            "Measure AS path inflation for prefixes learned from ASN 65547. Collect data for the time window between January 22, 2006, 00:00:00 and January 23, 2006, 00:00:00, and calculate the AS Path length for origin AS 65547.": 0.2285714285714286,
            "Collect BGP update records for prefix 192.168.0.0/16 from the collector rrc05 and analyze the AS Path inflation of the prefix for the 2020-01-15 time window starting from 16:00:00.": 0.21212121212121213,
            "Perform time-series analysis of AS path length and preference value through live stream data sources from RouteViews suit of collectors.": 0.19607843137254902,
            "Analyze the MOAS (Multiple Origin AS) prefixes generated in the time window from RouteViews2 and KDL collectors. Calculate and visualize the top 10 longest AS paths that cover the most routable addresses.": 0.19354838709677422
        },
        "avg_similarity_score": 0.1415815681515238
    }
]