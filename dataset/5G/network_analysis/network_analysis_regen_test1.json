[
    {
        "instruction": "Utilizing pandas and matplotlib, create a script to track the throughput performance of each user equipment over a 24-hour period, assess any anomalies present in the data, and make optimizations accordingly.",
        "input": "Load the CSV file 'data.csv' into a pandas DataFrame and visualize the throughput performance of each user equipment over a 24-hour period. Assess any anomalies present in the data and make optimizations accordingly.",
        "output": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('5G_data/ue-lte-network-traffic-stats.csv')\n\n# Select columns corresponding to throughput performance\nthroughput_columns = [col for col in df.columns if 'Throughput' in col]\n\n# Create a subset DataFrame with the throughput columns\nthroughput_data = df[throughput_columns]\n\n# Calculate the average throughput for each user equipment\navg_throughput = throughput_data.mean(axis=1)\n\n# Plot the average throughput performance\nplt.figure(figsize=(14,6))\nplt.plot(avg_throughput)\nplt.xlabel('Time (in Hours)')\nplt.ylabel('Throughput (in Mbps)')\nplt.title('Throughput Performance of Each User Equipment Over 24 Hours')\nplt.grid(True)\nplt.show()\n\n# Calculate the z-score of the throughput performance\nthroughput_zscore = throughput_data.apply(lambda x: (x - x.mean()) / x.std()).abs()\n\n# Find all the records above zscore 6\noutliers = throughput_zscore[throughput_zscore>6]\n\n# Get all the records with outliers\noutliers_data = df[df.index.isin(outliers.index)]\n\n# Print the records with outliers\npd.set_option('display.max_columns', None)\noutliers_data.head()\n\n# Make optimizations according to the data\n# Optimization 1: Increase base station power\n# Optimization 2: Move low signal users to better coverage area\n# Optimization 3: Remove any interference sources",
        "most_similar_instructions": {
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a box plot to visualize the jitter volatility for each UE. Ensure that each UE has a separate box in the plot, and label the plot appropriately.": 0.25974025974025977,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.2105263157894737,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values for traffic volume, jitter, and CQI for each UE, and create separate bar plots to visualize the means. Ensure each metric has a separate plot, and label the plots appropriately.": 0.18181818181818185,
            "Write Python code to load a a CSV file 'data.csv', define columns for traffic, jitter, and CQI, and create box plots to analyze these metrics. Ensure each metric has a separate box plot. Label the plots appropriately.": 0.17142857142857143,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of jitter and CQI for each UE, and create separate bar plots to visualize the means for each UE. Ensure that each metric (jitter and CQI) has a separate plot, and label the plots appropriately.": 0.17073170731707318,
            "Write Python code to load a CSV file 'data.csv' define a function to find and plot peaks in traffic volume for each UE and service, and call the function for 3 UEs and 3 services ('web-rtc', 'sipp', 'web-server'). Ensure each UE has a separate figure, and label the peaks accordingly.": 0.1647058823529412,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.1590909090909091,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns for each application ('web-rtc', 'sipp', 'web-server'), and perform a Throughput Analysis by summing the data throughput for each application across all UEs. Plot the results in a bar chart.": 0.15584415584415587,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the average traffic per user for LTE and 5G, and plot the results by 'geotype' for comparison. Separate the data into two groups based on 'spectrum_limitations' and plot separately for 'all_spectrum' and 'Limited Spectrum Bands'.": 0.14117647058823532,
            "Write Python code to load a CSV file 'data.csv' define applications, and plot the traffic volume for each UE and application. Iterate over UEs and applications to create separate plots. Ensure each plot has appropriate labels and a legend.": 0.1388888888888889
        },
        "avg_similarity_score": 0.14162080572887986
    },
    {
        "instruction": "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.",
        "input": "Generate visualizations of the 5G network data. Compute the web-rtc traffic mean over time. Visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.",
        "output": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\nweb_rtc_traffic_mean = df.groupby('time')['web-rtc_traffic'].mean()\nweb_rtc_traffic_mean.plot(style='-o', figsize=(14,4))\nplt.title('Web-RTC Traffic Mean over Time')\nplt.xlabel('Time')\nplt.ylabel('Traffic Mean')\nplt.show()",
        "most_similar_instructions": {
            "Generate Python code to calculate and visualize 5G network performance KPIs: Capacity Utilization, Cost Efficiency, and Service Penetration. Load data from '5G_Infrastructure/demand_driven_postcode_data_results.csv'. Use keywords: 'capacity', 'cost', 'area', 'numpoints' to identify relevant columns.": 0.19444444444444445,
            "Write Python code to load a CSV file 'data.csv' define applications, and plot the traffic volume for each UE and application. Iterate over UEs and applications to create separate plots. Ensure each plot has appropriate labels and a legend.": 0.1917808219178082,
            "Generate Python code to calculate and visualize 5G network performance KPIs: Total Network Capacity, Capacity per Area, Capacity per Point, Cost per Capacity, Cost per Area, and Surplus per Area. Load data from '5G_Infrastructure/demand_driven_postcode_data_results.csv'. Use keywords: 'capacity', 'cost', 'area', 'numpoints' to identify relevant columns.": 0.16666666666666669,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns related to different applications ('web-rtc', 'sipp', 'web-server'), calculate additional metrics for each application (e.g., max traffic, traffic std. dev., high traffic instances, percentiles), and create a DataFrame to store these metrics. Print the resulting DataFrame.": 0.16470588235294117,
            "Write Python code to load a a CSV file 'data.csv', define the QoS metrics to analyze (Jitter, CQI, Throughput), calculate the average and standard deviation for each metric, and create bar plots with error bars for each metric to visualize the results.": 0.15789473684210528,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.15730337078651685,
            "Load the dataset from a CSV file 'data.csv'. Define the QoS metrics to analyze (Jitter, CQI, Throughput) using dynamic column selection. Calculate the average and standard deviation for each metric. Create bar plots with error bars for each metric to visualize the results.": 0.15584415584415584,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.15584415584415584,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values for traffic volume, jitter, and CQI for each UE, and create separate bar plots to visualize the means. Ensure each metric has a separate plot, and label the plots appropriately.": 0.15384615384615383,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the average traffic per user for LTE and 5G, and plot the results by 'geotype' for comparison.": 0.15151515151515152
        },
        "avg_similarity_score": 0.13744004721650557
    },
    {
        "instruction": "Run a statistical test to detect any anomalies in the 5G data by assessing the IQR of the web-rtc traffic mean as a baseline for comparison.",
        "input": "Run a statistical test to detect any anomalies in the 5G data. Compare the web-rtc traffic mean IQR as a baseline for comparison.",
        "output": "import pandas as pd\nimport numpy as np\nfrom scipy import stats\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\nweb_rtc_mean = df.groupby('time')['web-rtc_traffic'].mean().tolist()\n\niqr = stats.iqr(web_rtc_mean)\nupper_bound = np.median(web_rtc_mean) + 1.5*iqr\nlower_bound = np.median(web_rtc_mean) - 1.5*iqr\n\nanomalies = []\nfor value in web_rtc_mean:\n    if value > upper_bound or value < lower_bound:\n        anomalies.append(value)\n        \nif len(anomalies) > 0:\n    print(\"{} outlier(s) detected in web-rtc traffic mean: {}\".format(len(anomalies), anomalies))\nelse:\n    print('No anomalies detected.')  \n    \nif len(anomalies) > 0:\n    print('Recommendation: Review web-rtc traffic mean data over the observed period and asses underlying causes of any abnormalities.') \nelse:\n    print('Recommendation: No action required.') \n    \nprint()\nprint('IQR of web-rtc:', iqr)\nprint('Upper bound:', upper_bound)\nprint('Lower bound:', lower_bound)",
        "most_similar_instructions": {
            "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.": 0.3,
            "Utilizing pandas and matplotlib, create a script to track the throughput performance of each user equipment over a 24-hour period, assess any anomalies present in the data, and make optimizations accordingly.": 0.23728813559322032,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the average traffic per user for LTE and 5G, and plot the results by 'geotype' for comparison.": 0.23333333333333334,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.19718309859154928,
            "Write Python code to load a CSV file 'data.csv'automatically detect relevant columns by keyword ('capacity', 'spectrum', 'small.cells', 'numpoints'), and calculate the per user capacity increase due to 5G spectrum bands. Group by 'geotype' and calculate the mean per user capacity increase for each geotype. Plot the per user capacity increase by geotype.": 0.19512195121951217,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the investment cost per user, and plot the results by 'geotype' for comparison. Ensure all necessary columns are found, convert relevant columns to numeric, handle NaN values, and calculate the investment cost per user.": 0.18181818181818182,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the average traffic per user for LTE and 5G, and plot the results by 'geotype' for comparison. Separate the data into two groups based on 'spectrum_limitations' and plot separately for 'all_spectrum' and 'Limited Spectrum Bands'.": 0.17499999999999996,
            "Write Python code to load a CSV file 'data.csv' define a function to find and plot peaks in traffic volume for each UE and service, and call the function for 3 UEs and 3 services ('web-rtc', 'sipp', 'web-server'). Ensure each UE has a separate figure, and label the peaks accordingly.": 0.17499999999999996,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.1686746987951807,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns for each application ('web-rtc', 'sipp', 'web-server'), and perform a Throughput Analysis by summing the data throughput for each application across all UEs. Plot the results in a bar chart.": 0.16666666666666669
        },
        "avg_similarity_score": 0.1557399545963618
    },
    {
        "instruction": "Create summary statistics for the web-rtc data to quantify traffic patterns and user behavior within the 5G network.",
        "input": "Create summary statistics for the web-rtc data. Quantify traffic patterns and user behavior within the 5G network.",
        "output": "import pandas as pd\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\nsummary_stats = df['web-rtc_traffic'].describe()\nprint('Summary Statistics for Web-RTC traffic:')\nprint(summary_stats) \n\nprint()\nprint('Recommendation: The summary stats might be indicative of specific user behavior or network patterns. Further investigations should be carried out to verify any suspicious trends.')",
        "most_similar_instructions": {
            "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.": 0.2692307692307693,
            "Run a statistical test to detect any anomalies in the 5G data by assessing the IQR of the web-rtc traffic mean as a baseline for comparison.": 0.17391304347826086,
            "Write Python code to load a CSV file 'data.csv' define a function to find and plot peaks in traffic volume for each UE and service, and call the function for 3 UEs and 3 services ('web-rtc', 'sipp', 'web-server'). Ensure each UE has a separate figure, and label the peaks accordingly.": 0.16666666666666666,
            "Write Python code to load a CSV file 'data.csv' categorize columns into traffic, jitter, and CQI, and plot the results for each category. Create subplots for Traffic Volume, Jitter, and CQI analyses, and plot each relevant column in the corresponding subplot.": 0.1639344262295082,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.16,
            "Load the dataset from a CSV file 'data.csv'. Define the QoS metrics to analyze (Jitter, CQI, Throughput) using dynamic column selection. Calculate the average and standard deviation for each metric. Create bar plots with error bars for each metric to visualize the results.": 0.15873015873015872,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.15873015873015872,
            "Utilizing pandas and matplotlib, create a script to track the throughput performance of each user equipment over a 24-hour period, assess any anomalies present in the data, and make optimizations accordingly.": 0.1568627450980392,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns for each application ('web-rtc', 'sipp', 'web-server'), and perform a Throughput Analysis by summing the data throughput for each application across all UEs. Plot the results in a bar chart.": 0.15625,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a box plot to visualize the jitter volatility for each UE. Ensure that each UE has a separate box in the plot, and label the plot appropriately.": 0.15625
        },
        "avg_similarity_score": 0.14019717961700917
    },
    {
        "instruction": "Perform Jitter Analysis using the web-rtc traffic data. Analyze the data for any unexpected, unusual activity to assess the impact on service quality.",
        "input": "Perform Jitter Analysis using the web-rtc traffic data. Analyze the data for any unexpected, unusual activity to assess its impact on service quality.",
        "output": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\njitter_traffic = df.groupby('time')['web-rtc_traffic'].mean().diff().dropna().tolist()\n\nmean_jitter = np.mean(jitter_traffic)\nstd_jitter = np.std(jitter_traffic)\n\n#Identify abnormal jitter values using 3 std from the mean \nthreshold = 3*std_jitter + mean_jitter\nunusual_activity = [(value, df[df['time'] == idx].iloc[0]['time']) for idx, value in enumerate(jitter_traffic) if value > threshold]\n\n# Plot histogram of jitter values\nplt.hist(jitter_traffic, density=True, bins=50)\nplt.title(\"Jitter Analysis\")\nplt.xlabel('web-rtc jitter')\nplt.ylabel('Frequency')\nplt.xlim(-1, max(jitter_traffic))\nplt.axvline(x=threshold, color='r', label='3 std. dev. from mean')\nplt.legend()\nplt.show()\n\nif len(unusual_activity) > 0:\n    print('{} outlier(s) detected in web-rtc jitter traffic data'.format(len(unusual_activity)))\n    print('Recommendation: Investigate underlying causes to determine if the anomalies are impacting service quality.')\nelse:\n    print('No unusual activity detected.')\n    print('Recommendation: No action required.')\n\nprint('Mean jitter:', mean_jitter)\nprint('Standard deviation of jitter:',std_jitter)\nprint('Threshold: ', threshold)\nprint('Unusual Activity:', unusual_activity)\nprint()\nprint('Displayed in the graph above, the red line indicates the threshold of 3 standard deviations from the mean.') \nprint('Any jitter values above this threshold are considered outlier.')\nprint('Practical Note: According to RFC 793, a jitter value of greater than 0.2 ms indicates a problem.') \nprint('If the observed outliers are above this value, an underlying latency issue might be present.')",
        "most_similar_instructions": {
            "Create summary statistics for the web-rtc data to quantify traffic patterns and user behavior within the 5G network.": 0.27906976744186046,
            "Load the dataset from a CSV file 'data.csv'. Define the QoS metrics to analyze (Jitter, CQI, Throughput) using dynamic column selection. Calculate the average and standard deviation for each metric. Create bar plots with error bars for each metric to visualize the results.": 0.20588235294117646,
            "Run a statistical test to detect any anomalies in the 5G data by assessing the IQR of the web-rtc traffic mean as a baseline for comparison.": 0.19607843137254902,
            "Write Python code to load a a CSV file 'data.csv', define the QoS metrics to analyze (Jitter, CQI, Throughput), calculate the average and standard deviation for each metric, and create bar plots with error bars for each metric to visualize the results.": 0.1791044776119403,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.1764705882352941,
            "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.": 0.1754385964912281,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns for each application ('web-rtc', 'sipp', 'web-server'), and perform a Throughput Analysis by summing the data throughput for each application across all UEs. Plot the results in a bar chart.": 0.1739130434782609,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the average traffic per user for LTE and 5G, and plot the results by 'geotype' for comparison. Separate the data into two groups based on 'spectrum_limitations' and plot separately for 'all_spectrum' and 'Limited Spectrum Bands'.": 0.15584415584415587,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.15,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a box plot to visualize the jitter volatility for each UE. Ensure that each UE has a separate box in the plot, and label the plot appropriately.": 0.14492753623188406
        },
        "avg_similarity_score": 0.1387686062336658
    },
    {
        "instruction": "Use statistical methods to assess if there is a correlation between web-rtc latency and traffic to identify cases of underperforming user equipment impacting service quality.",
        "input": "Use statistical methods to assess if there is a correlation between web-rtc latency and traffic. Identify cases of underperforming user equipment impacting service quality.",
        "output": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\nsns.set(style=\"darkgrid\")\n\nplt.title('Web-RTC Latency vs. Traffic')\nsns.scatterplot(x=\"web-rtc_latency\", y=\"web-rtc_traffic\", data=df)\nplt.xlabel(\"latency (msec)\")\nplt.ylabel(\"traffic (Mbps)\")\nplt.show()\n\ncorrelation_score = df['web-rtc_latency'].corr(df['web-rtc_traffic'])\n\nif correlation_score > 0.5:\n    print('Practical Note: A high correlation score between web-rtc latency and traffic indicates that underperforming user equipment is impacting service quality.')\n    print('Recommendation: Investigate further the underlying causes for any observed latency issues.')\nelse:\n    print('No correlations detected.')\n    print('Recommendation: No action required.')\n\nprint('Correlation score between web-rtc latency and traffic:', correlation_score )\nprint('Practical Note: According to RFC 793, an ideal round-trip latency should be less than 0.2 ms.')",
        "most_similar_instructions": {
            "Perform Jitter Analysis using the web-rtc traffic data. Analyze the data for any unexpected, unusual activity to assess the impact on service quality.": 0.24000000000000002,
            "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.": 0.2033898305084746,
            "Run a statistical test to detect any anomalies in the 5G data by assessing the IQR of the web-rtc traffic mean as a baseline for comparison.": 0.18867924528301885,
            "Create summary statistics for the web-rtc data to quantify traffic patterns and user behavior within the 5G network.": 0.17777777777777778,
            "Utilizing pandas and matplotlib, create a script to track the throughput performance of each user equipment over a 24-hour period, assess any anomalies present in the data, and make optimizations accordingly.": 0.1724137931034483,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns related to different applications ('web-rtc', 'sipp', 'web-server'), calculate additional metrics for each application (e.g., max traffic, traffic std. dev., high traffic instances, percentiles), and create a DataFrame to store these metrics. Print the resulting DataFrame.": 0.15384615384615388,
            "Write Python code to load a CSV file 'data.csv' define applications, and plot the traffic volume for each UE and application. Iterate over UEs and applications to create separate plots. Ensure each plot has appropriate labels and a legend.": 0.15151515151515152,
            "Write Python code to load a CSV file 'data.csv' define services, and create box plots to analyze traffic volume for each service across different UEs. Iterate over services to create separate box plots. Ensure each box plot has appropriate labels.": 0.1492537313432836,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.14634146341463414,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.14285714285714285
        },
        "avg_similarity_score": 0.1330678565688234
    },
    {
        "instruction": "Compute the aggregate traffic mean for web-rtc, sipp, and web-server applications to assess user behavior within the 5G network.",
        "input": "Compute the aggregate traffic mean for web-rtc, sipp, and web-server applications. Assess user behavior within the 5G network.",
        "output": "import pandas as pd\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\napplication_columns = [col for col in df.columns if 'web-rtc' in col or 'sipp' in col or 'web-server' in col]\napplication_traffic_mean = [df[col].mean() for col in application_columns]\n\nprint('Aggregate traffic means for web-rtc, sipp, and web-server applications: {}'.format(application_traffic_mean))\n\nif any(val > 100 for val in application_traffic_mean):\n    print('Recommendation: This might indicate user device is hitting the upper end of its capacity. Assess if network optimization strategies are required.')\nelse:\n    print('Recommendation: No action required.') \n\nprint('Practical Note: According to cellular industry standards, traffic should ideally not exceed 25-50 Mbps.') \nprint('Any traffic values above these values may be too high for the current user device.')\nprint('It might be advisable to consider additional network optimization strategies.')",
        "most_similar_instructions": {
            "Create summary statistics for the web-rtc data to quantify traffic patterns and user behavior within the 5G network.": 0.5,
            "Perform Jitter Analysis using the web-rtc traffic data. Analyze the data for any unexpected, unusual activity to assess the impact on service quality.": 0.26666666666666666,
            "Write Python code to load a a CSV file 'data.csv', calculate the mean values of traffic volume for each UE and for each application category ('web-rtc', 'sipp', 'web-server'), and create separate bar plots to visualize the means for each UE. Ensure that each UE has a separate plot, and label the plots appropriately.": 0.2597402597402597,
            "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.": 0.25925925925925924,
            "Write Python code to load a CSV file 'data.csv' define a function to find and plot peaks in traffic volume for each UE and service, and call the function for 3 UEs and 3 services ('web-rtc', 'sipp', 'web-server'). Ensure each UE has a separate figure, and label the peaks accordingly.": 0.21621621621621623,
            "Use statistical methods to assess if there is a correlation between web-rtc latency and traffic to identify cases of underperforming user equipment impacting service quality.": 0.21276595744680848,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns for each application ('web-rtc', 'sipp', 'web-server'), and perform a Throughput Analysis by summing the data throughput for each application across all UEs. Plot the results in a bar chart.": 0.21212121212121213,
            "Write Python code to load a CSV file 'data.csv' define applications, and plot the traffic volume for each UE and application. Iterate over UEs and applications to create separate plots. Ensure each plot has appropriate labels and a legend.": 0.1967213114754098,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns related to different applications ('web-rtc', 'sipp', 'web-server'), calculate additional metrics for each application (e.g., max traffic, traffic std. dev., high traffic instances, percentiles), and create a DataFrame to store these metrics. Print the resulting DataFrame.": 0.19178082191780818,
            "Write Python code to load a CSV file 'data.csv'detect relevant columns by keywords, calculate the average traffic per user for LTE and 5G, and plot the results by 'geotype' for comparison.": 0.18518518518518517
        },
        "avg_similarity_score": 0.1633524612916743
    },
    {
        "instruction": "Deploy an outlier detection algorithm to identify any unexpected patterns in the 5G data.",
        "input": "Deploy an outlier detection algorithm to identify any unexpected patterns in the 5G data.",
        "output": "import pandas as pd\nimport numpy as np\nfrom sklearn.covariance import EllipticEnvelope\n\ndf = pd.read_csv(\"5G_data/ue-lte-network-traffic-stats.csv\")\napplication_columns = [col for col in df.columns if 'web-rtc' in col or 'sipp' in col or 'web-server' in col]\n\n# Fit the data to EllipticEnvelope algorithm\ndetector = EllipticEnvelope(contamination=0.1)  # Contamination of 0.1 corresponds to 10% outliers\ndetector.fit(np.reshape(df[application_columns], (df.shape[0], -1)))\n\n#Detect outliers\noutliers = detector.predict(np.reshape(df[application_columns], (df.shape[0], -1)))\n\n#Get index of outliers\noutliers = np.where(outliers == -1)[0]\n\n#Visualize the outliers\npd.options.display.mpl_style = 'default'\nplt.scatter(df.index, df[application_columns], c=outliers, linewidth=0)\nplt.title('Outlier Detection')\nplt.ylabel('Traffic (Mbps)')\nplt.xlabel('Time')\nplt.show()\n\nif len(outliers) > 0:\n    print('{} outlier(s) detected in 5G data: {}'.format(len(outliers), outliers))\n    print('Recommendation: Investigate further the underlying causes of the outliers.')\nelse:\n    print('No outliers detected.')\n    print('Recommendation: No action required.')\n\nprint('Practical Note: Outliers may be caused by sudden spikes in traffic, anomalous user behavior, or inadequate performance of the user equipment.')\nprint('If detected, an investigation of underlying causes might be necessary to assess the impact on service quality.')",
        "most_similar_instructions": {
            "Run a statistical test to detect any anomalies in the 5G data by assessing the IQR of the web-rtc traffic mean as a baseline for comparison.": 0.29268292682926833,
            "Create summary statistics for the web-rtc data to quantify traffic patterns and user behavior within the 5G network.": 0.24242424242424243,
            "Utilizing pandas and matplotlib, create a script to track the throughput performance of each user equipment over a 24-hour period, assess any anomalies present in the data, and make optimizations accordingly.": 0.21739130434782608,
            "Compute the aggregate traffic mean for web-rtc, sipp, and web-server applications to assess user behavior within the 5G network.": 0.17142857142857143,
            "Generate visualizations to explore the 5G network data. Compute the web-rtc traffic mean over time and visualize trends with Matplotlib to identify any traffic spikes, seasonal patterns, or long-term behavior changes.": 0.1702127659574468,
            "Perform Jitter Analysis using the web-rtc traffic data. Analyze the data for any unexpected, unusual activity to assess the impact on service quality.": 0.15789473684210525,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns related to traffic, jitter, and CQI, apply an anomaly detection function using Interquartile Range (IQR) to each category of metrics (traffic, jitter, and CQI), store anomalies in separate columns with '_Anomaly' suffix, count anomalies for each column, and print the anomaly counts.": 0.14285714285714285,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a scatter plot to visualize the jitter data for each UE. Additionally, identify and emphasize the outliers in the plot using a different marker or color.": 0.13793103448275862,
            "Write Python code to load a a CSV file 'data.csv', dynamically identify columns for each application ('web-rtc', 'sipp', 'web-server'), and perform a Throughput Analysis by summing the data throughput for each application across all UEs. Plot the results in a bar chart.": 0.13559322033898305,
            "Write Python code to load a a CSV file 'data.csv', identify columns containing 'Jitter' data, and create a box plot to visualize the jitter volatility for each UE. Ensure that each UE has a separate box in the plot, and label the plot appropriately.": 0.13559322033898305
        },
        "avg_similarity_score": 0.11667910013554268
    }
]